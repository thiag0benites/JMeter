/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 252.0, "minX": 0.0, "maxY": 17653.0, "series": [{"data": [[0.0, 301.0], [0.1, 301.0], [0.2, 301.0], [0.3, 301.0], [0.4, 301.0], [0.5, 309.0], [0.6, 309.0], [0.7, 309.0], [0.8, 309.0], [0.9, 309.0], [1.0, 310.0], [1.1, 310.0], [1.2, 310.0], [1.3, 310.0], [1.4, 310.0], [1.5, 312.0], [1.6, 312.0], [1.7, 312.0], [1.8, 312.0], [1.9, 312.0], [2.0, 322.0], [2.1, 322.0], [2.2, 322.0], [2.3, 322.0], [2.4, 322.0], [2.5, 330.0], [2.6, 330.0], [2.7, 330.0], [2.8, 330.0], [2.9, 330.0], [3.0, 345.0], [3.1, 345.0], [3.2, 345.0], [3.3, 345.0], [3.4, 345.0], [3.5, 353.0], [3.6, 353.0], [3.7, 353.0], [3.8, 353.0], [3.9, 353.0], [4.0, 362.0], [4.1, 362.0], [4.2, 362.0], [4.3, 362.0], [4.4, 362.0], [4.5, 364.0], [4.6, 364.0], [4.7, 364.0], [4.8, 364.0], [4.9, 364.0], [5.0, 380.0], [5.1, 380.0], [5.2, 380.0], [5.3, 380.0], [5.4, 380.0], [5.5, 407.0], [5.6, 407.0], [5.7, 407.0], [5.8, 407.0], [5.9, 407.0], [6.0, 407.0], [6.1, 407.0], [6.2, 407.0], [6.3, 407.0], [6.4, 407.0], [6.5, 455.0], [6.6, 455.0], [6.7, 455.0], [6.8, 455.0], [6.9, 455.0], [7.0, 464.0], [7.1, 464.0], [7.2, 464.0], [7.3, 464.0], [7.4, 464.0], [7.5, 464.0], [7.6, 464.0], [7.7, 464.0], [7.8, 464.0], [7.9, 464.0], [8.0, 506.0], [8.1, 506.0], [8.2, 506.0], [8.3, 506.0], [8.4, 506.0], [8.5, 513.0], [8.6, 513.0], [8.7, 513.0], [8.8, 513.0], [8.9, 513.0], [9.0, 532.0], [9.1, 532.0], [9.2, 532.0], [9.3, 532.0], [9.4, 532.0], [9.5, 546.0], [9.6, 546.0], [9.7, 546.0], [9.8, 546.0], [9.9, 546.0], [10.0, 557.0], [10.1, 557.0], [10.2, 557.0], [10.3, 557.0], [10.4, 557.0], [10.5, 569.0], [10.6, 569.0], [10.7, 569.0], [10.8, 569.0], [10.9, 569.0], [11.0, 578.0], [11.1, 578.0], [11.2, 578.0], [11.3, 578.0], [11.4, 578.0], [11.5, 581.0], [11.6, 581.0], [11.7, 581.0], [11.8, 581.0], [11.9, 581.0], [12.0, 586.0], [12.1, 586.0], [12.2, 586.0], [12.3, 586.0], [12.4, 586.0], [12.5, 589.0], [12.6, 589.0], [12.7, 589.0], [12.8, 589.0], [12.9, 589.0], [13.0, 589.0], [13.1, 589.0], [13.2, 589.0], [13.3, 589.0], [13.4, 589.0], [13.5, 593.0], [13.6, 593.0], [13.7, 593.0], [13.8, 593.0], [13.9, 593.0], [14.0, 593.0], [14.1, 593.0], [14.2, 593.0], [14.3, 593.0], [14.4, 593.0], [14.5, 604.0], [14.6, 604.0], [14.7, 604.0], [14.8, 604.0], [14.9, 604.0], [15.0, 616.0], [15.1, 616.0], [15.2, 616.0], [15.3, 616.0], [15.4, 616.0], [15.5, 620.0], [15.6, 620.0], [15.7, 620.0], [15.8, 620.0], [15.9, 620.0], [16.0, 625.0], [16.1, 625.0], [16.2, 625.0], [16.3, 625.0], [16.4, 625.0], [16.5, 625.0], [16.6, 625.0], [16.7, 625.0], [16.8, 625.0], [16.9, 625.0], [17.0, 626.0], [17.1, 626.0], [17.2, 626.0], [17.3, 626.0], [17.4, 626.0], [17.5, 628.0], [17.6, 628.0], [17.7, 628.0], [17.8, 628.0], [17.9, 628.0], [18.0, 632.0], [18.1, 632.0], [18.2, 632.0], [18.3, 632.0], [18.4, 632.0], [18.5, 633.0], [18.6, 633.0], [18.7, 633.0], [18.8, 633.0], [18.9, 633.0], [19.0, 635.0], [19.1, 635.0], [19.2, 635.0], [19.3, 635.0], [19.4, 635.0], [19.5, 636.0], [19.6, 636.0], [19.7, 636.0], [19.8, 636.0], [19.9, 636.0], [20.0, 637.0], [20.1, 637.0], [20.2, 637.0], [20.3, 637.0], [20.4, 637.0], [20.5, 640.0], [20.6, 640.0], [20.7, 640.0], [20.8, 640.0], [20.9, 640.0], [21.0, 645.0], [21.1, 645.0], [21.2, 645.0], [21.3, 645.0], [21.4, 645.0], [21.5, 646.0], [21.6, 646.0], [21.7, 646.0], [21.8, 646.0], [21.9, 646.0], [22.0, 647.0], [22.1, 647.0], [22.2, 647.0], [22.3, 647.0], [22.4, 647.0], [22.5, 648.0], [22.6, 648.0], [22.7, 648.0], [22.8, 648.0], [22.9, 648.0], [23.0, 655.0], [23.1, 655.0], [23.2, 655.0], [23.3, 655.0], [23.4, 655.0], [23.5, 656.0], [23.6, 656.0], [23.7, 656.0], [23.8, 656.0], [23.9, 656.0], [24.0, 661.0], [24.1, 661.0], [24.2, 661.0], [24.3, 661.0], [24.4, 661.0], [24.5, 661.0], [24.6, 661.0], [24.7, 661.0], [24.8, 661.0], [24.9, 661.0], [25.0, 663.0], [25.1, 663.0], [25.2, 663.0], [25.3, 663.0], [25.4, 663.0], [25.5, 672.0], [25.6, 672.0], [25.7, 672.0], [25.8, 672.0], [25.9, 672.0], [26.0, 679.0], [26.1, 679.0], [26.2, 679.0], [26.3, 679.0], [26.4, 679.0], [26.5, 680.0], [26.6, 680.0], [26.7, 680.0], [26.8, 680.0], [26.9, 680.0], [27.0, 682.0], [27.1, 682.0], [27.2, 682.0], [27.3, 682.0], [27.4, 682.0], [27.5, 682.0], [27.6, 682.0], [27.7, 682.0], [27.8, 682.0], [27.9, 682.0], [28.0, 684.0], [28.1, 684.0], [28.2, 684.0], [28.3, 684.0], [28.4, 684.0], [28.5, 688.0], [28.6, 688.0], [28.7, 688.0], [28.8, 688.0], [28.9, 688.0], [29.0, 690.0], [29.1, 690.0], [29.2, 690.0], [29.3, 690.0], [29.4, 690.0], [29.5, 691.0], [29.6, 691.0], [29.7, 691.0], [29.8, 691.0], [29.9, 691.0], [30.0, 691.0], [30.1, 691.0], [30.2, 691.0], [30.3, 691.0], [30.4, 691.0], [30.5, 693.0], [30.6, 693.0], [30.7, 693.0], [30.8, 693.0], [30.9, 693.0], [31.0, 693.0], [31.1, 693.0], [31.2, 693.0], [31.3, 693.0], [31.4, 693.0], [31.5, 699.0], [31.6, 699.0], [31.7, 699.0], [31.8, 699.0], [31.9, 699.0], [32.0, 711.0], [32.1, 711.0], [32.2, 711.0], [32.3, 711.0], [32.4, 711.0], [32.5, 712.0], [32.6, 712.0], [32.7, 712.0], [32.8, 712.0], [32.9, 712.0], [33.0, 718.0], [33.1, 718.0], [33.2, 718.0], [33.3, 718.0], [33.4, 718.0], [33.5, 732.0], [33.6, 732.0], [33.7, 732.0], [33.8, 732.0], [33.9, 732.0], [34.0, 735.0], [34.1, 735.0], [34.2, 735.0], [34.3, 735.0], [34.4, 735.0], [34.5, 740.0], [34.6, 740.0], [34.7, 740.0], [34.8, 740.0], [34.9, 740.0], [35.0, 742.0], [35.1, 742.0], [35.2, 742.0], [35.3, 742.0], [35.4, 742.0], [35.5, 743.0], [35.6, 743.0], [35.7, 743.0], [35.8, 743.0], [35.9, 743.0], [36.0, 748.0], [36.1, 748.0], [36.2, 748.0], [36.3, 748.0], [36.4, 748.0], [36.5, 754.0], [36.6, 754.0], [36.7, 754.0], [36.8, 754.0], [36.9, 754.0], [37.0, 756.0], [37.1, 756.0], [37.2, 756.0], [37.3, 756.0], [37.4, 756.0], [37.5, 763.0], [37.6, 763.0], [37.7, 763.0], [37.8, 763.0], [37.9, 763.0], [38.0, 764.0], [38.1, 764.0], [38.2, 764.0], [38.3, 764.0], [38.4, 764.0], [38.5, 766.0], [38.6, 766.0], [38.7, 766.0], [38.8, 766.0], [38.9, 766.0], [39.0, 770.0], [39.1, 770.0], [39.2, 770.0], [39.3, 770.0], [39.4, 770.0], [39.5, 774.0], [39.6, 774.0], [39.7, 774.0], [39.8, 774.0], [39.9, 774.0], [40.0, 775.0], [40.1, 775.0], [40.2, 775.0], [40.3, 775.0], [40.4, 775.0], [40.5, 776.0], [40.6, 776.0], [40.7, 776.0], [40.8, 776.0], [40.9, 776.0], [41.0, 779.0], [41.1, 779.0], [41.2, 779.0], [41.3, 779.0], [41.4, 779.0], [41.5, 782.0], [41.6, 782.0], [41.7, 782.0], [41.8, 782.0], [41.9, 782.0], [42.0, 782.0], [42.1, 782.0], [42.2, 782.0], [42.3, 782.0], [42.4, 782.0], [42.5, 787.0], [42.6, 787.0], [42.7, 787.0], [42.8, 787.0], [42.9, 787.0], [43.0, 787.0], [43.1, 787.0], [43.2, 787.0], [43.3, 787.0], [43.4, 787.0], [43.5, 790.0], [43.6, 790.0], [43.7, 790.0], [43.8, 790.0], [43.9, 790.0], [44.0, 792.0], [44.1, 792.0], [44.2, 792.0], [44.3, 792.0], [44.4, 792.0], [44.5, 795.0], [44.6, 795.0], [44.7, 795.0], [44.8, 795.0], [44.9, 795.0], [45.0, 796.0], [45.1, 796.0], [45.2, 796.0], [45.3, 796.0], [45.4, 796.0], [45.5, 800.0], [45.6, 800.0], [45.7, 800.0], [45.8, 800.0], [45.9, 800.0], [46.0, 803.0], [46.1, 803.0], [46.2, 803.0], [46.3, 803.0], [46.4, 803.0], [46.5, 803.0], [46.6, 803.0], [46.7, 803.0], [46.8, 803.0], [46.9, 803.0], [47.0, 810.0], [47.1, 810.0], [47.2, 810.0], [47.3, 810.0], [47.4, 810.0], [47.5, 810.0], [47.6, 810.0], [47.7, 810.0], [47.8, 810.0], [47.9, 810.0], [48.0, 813.0], [48.1, 813.0], [48.2, 813.0], [48.3, 813.0], [48.4, 813.0], [48.5, 818.0], [48.6, 818.0], [48.7, 818.0], [48.8, 818.0], [48.9, 818.0], [49.0, 821.0], [49.1, 821.0], [49.2, 821.0], [49.3, 821.0], [49.4, 821.0], [49.5, 822.0], [49.6, 822.0], [49.7, 822.0], [49.8, 822.0], [49.9, 822.0], [50.0, 826.0], [50.1, 826.0], [50.2, 826.0], [50.3, 826.0], [50.4, 826.0], [50.5, 827.0], [50.6, 827.0], [50.7, 827.0], [50.8, 827.0], [50.9, 827.0], [51.0, 830.0], [51.1, 830.0], [51.2, 830.0], [51.3, 830.0], [51.4, 830.0], [51.5, 835.0], [51.6, 835.0], [51.7, 835.0], [51.8, 835.0], [51.9, 835.0], [52.0, 835.0], [52.1, 835.0], [52.2, 835.0], [52.3, 835.0], [52.4, 835.0], [52.5, 836.0], [52.6, 836.0], [52.7, 836.0], [52.8, 836.0], [52.9, 836.0], [53.0, 839.0], [53.1, 839.0], [53.2, 839.0], [53.3, 839.0], [53.4, 839.0], [53.5, 847.0], [53.6, 847.0], [53.7, 847.0], [53.8, 847.0], [53.9, 847.0], [54.0, 851.0], [54.1, 851.0], [54.2, 851.0], [54.3, 851.0], [54.4, 851.0], [54.5, 855.0], [54.6, 855.0], [54.7, 855.0], [54.8, 855.0], [54.9, 855.0], [55.0, 860.0], [55.1, 860.0], [55.2, 860.0], [55.3, 860.0], [55.4, 860.0], [55.5, 862.0], [55.6, 862.0], [55.7, 862.0], [55.8, 862.0], [55.9, 862.0], [56.0, 864.0], [56.1, 864.0], [56.2, 864.0], [56.3, 864.0], [56.4, 864.0], [56.5, 869.0], [56.6, 869.0], [56.7, 869.0], [56.8, 869.0], [56.9, 869.0], [57.0, 871.0], [57.1, 871.0], [57.2, 871.0], [57.3, 871.0], [57.4, 871.0], [57.5, 874.0], [57.6, 874.0], [57.7, 874.0], [57.8, 874.0], [57.9, 874.0], [58.0, 885.0], [58.1, 885.0], [58.2, 885.0], [58.3, 885.0], [58.4, 885.0], [58.5, 889.0], [58.6, 889.0], [58.7, 889.0], [58.8, 889.0], [58.9, 889.0], [59.0, 890.0], [59.1, 890.0], [59.2, 890.0], [59.3, 890.0], [59.4, 890.0], [59.5, 892.0], [59.6, 892.0], [59.7, 892.0], [59.8, 892.0], [59.9, 892.0], [60.0, 897.0], [60.1, 897.0], [60.2, 897.0], [60.3, 897.0], [60.4, 897.0], [60.5, 897.0], [60.6, 897.0], [60.7, 897.0], [60.8, 897.0], [60.9, 897.0], [61.0, 899.0], [61.1, 899.0], [61.2, 899.0], [61.3, 899.0], [61.4, 899.0], [61.5, 903.0], [61.6, 903.0], [61.7, 903.0], [61.8, 903.0], [61.9, 903.0], [62.0, 913.0], [62.1, 913.0], [62.2, 913.0], [62.3, 913.0], [62.4, 913.0], [62.5, 914.0], [62.6, 914.0], [62.7, 914.0], [62.8, 914.0], [62.9, 914.0], [63.0, 915.0], [63.1, 915.0], [63.2, 915.0], [63.3, 915.0], [63.4, 915.0], [63.5, 919.0], [63.6, 919.0], [63.7, 919.0], [63.8, 919.0], [63.9, 919.0], [64.0, 920.0], [64.1, 920.0], [64.2, 920.0], [64.3, 920.0], [64.4, 920.0], [64.5, 923.0], [64.6, 923.0], [64.7, 923.0], [64.8, 923.0], [64.9, 923.0], [65.0, 928.0], [65.1, 928.0], [65.2, 928.0], [65.3, 928.0], [65.4, 928.0], [65.5, 929.0], [65.6, 929.0], [65.7, 929.0], [65.8, 929.0], [65.9, 929.0], [66.0, 935.0], [66.1, 935.0], [66.2, 935.0], [66.3, 935.0], [66.4, 935.0], [66.5, 939.0], [66.6, 939.0], [66.7, 939.0], [66.8, 939.0], [66.9, 939.0], [67.0, 948.0], [67.1, 948.0], [67.2, 948.0], [67.3, 948.0], [67.4, 948.0], [67.5, 957.0], [67.6, 957.0], [67.7, 957.0], [67.8, 957.0], [67.9, 957.0], [68.0, 958.0], [68.1, 958.0], [68.2, 958.0], [68.3, 958.0], [68.4, 958.0], [68.5, 962.0], [68.6, 962.0], [68.7, 962.0], [68.8, 962.0], [68.9, 962.0], [69.0, 967.0], [69.1, 967.0], [69.2, 967.0], [69.3, 967.0], [69.4, 967.0], [69.5, 972.0], [69.6, 972.0], [69.7, 972.0], [69.8, 972.0], [69.9, 972.0], [70.0, 974.0], [70.1, 974.0], [70.2, 974.0], [70.3, 974.0], [70.4, 974.0], [70.5, 982.0], [70.6, 982.0], [70.7, 982.0], [70.8, 982.0], [70.9, 982.0], [71.0, 986.0], [71.1, 986.0], [71.2, 986.0], [71.3, 986.0], [71.4, 986.0], [71.5, 991.0], [71.6, 991.0], [71.7, 991.0], [71.8, 991.0], [71.9, 991.0], [72.0, 995.0], [72.1, 995.0], [72.2, 995.0], [72.3, 995.0], [72.4, 995.0], [72.5, 996.0], [72.6, 996.0], [72.7, 996.0], [72.8, 996.0], [72.9, 996.0], [73.0, 1001.0], [73.1, 1001.0], [73.2, 1001.0], [73.3, 1001.0], [73.4, 1001.0], [73.5, 1001.0], [73.6, 1001.0], [73.7, 1001.0], [73.8, 1001.0], [73.9, 1001.0], [74.0, 1007.0], [74.1, 1007.0], [74.2, 1007.0], [74.3, 1007.0], [74.4, 1007.0], [74.5, 1016.0], [74.6, 1016.0], [74.7, 1016.0], [74.8, 1016.0], [74.9, 1016.0], [75.0, 1025.0], [75.1, 1025.0], [75.2, 1025.0], [75.3, 1025.0], [75.4, 1025.0], [75.5, 1026.0], [75.6, 1026.0], [75.7, 1026.0], [75.8, 1026.0], [75.9, 1026.0], [76.0, 1035.0], [76.1, 1035.0], [76.2, 1035.0], [76.3, 1035.0], [76.4, 1035.0], [76.5, 1044.0], [76.6, 1044.0], [76.7, 1044.0], [76.8, 1044.0], [76.9, 1044.0], [77.0, 1052.0], [77.1, 1052.0], [77.2, 1052.0], [77.3, 1052.0], [77.4, 1052.0], [77.5, 1054.0], [77.6, 1054.0], [77.7, 1054.0], [77.8, 1054.0], [77.9, 1054.0], [78.0, 1058.0], [78.1, 1058.0], [78.2, 1058.0], [78.3, 1058.0], [78.4, 1058.0], [78.5, 1060.0], [78.6, 1060.0], [78.7, 1060.0], [78.8, 1060.0], [78.9, 1060.0], [79.0, 1065.0], [79.1, 1065.0], [79.2, 1065.0], [79.3, 1065.0], [79.4, 1065.0], [79.5, 1073.0], [79.6, 1073.0], [79.7, 1073.0], [79.8, 1073.0], [79.9, 1073.0], [80.0, 1076.0], [80.1, 1076.0], [80.2, 1076.0], [80.3, 1076.0], [80.4, 1076.0], [80.5, 1088.0], [80.6, 1088.0], [80.7, 1088.0], [80.8, 1088.0], [80.9, 1088.0], [81.0, 1095.0], [81.1, 1095.0], [81.2, 1095.0], [81.3, 1095.0], [81.4, 1095.0], [81.5, 1096.0], [81.6, 1096.0], [81.7, 1096.0], [81.8, 1096.0], [81.9, 1096.0], [82.0, 1096.0], [82.1, 1096.0], [82.2, 1096.0], [82.3, 1096.0], [82.4, 1096.0], [82.5, 1097.0], [82.6, 1097.0], [82.7, 1097.0], [82.8, 1097.0], [82.9, 1097.0], [83.0, 1105.0], [83.1, 1105.0], [83.2, 1105.0], [83.3, 1105.0], [83.4, 1105.0], [83.5, 1106.0], [83.6, 1106.0], [83.7, 1106.0], [83.8, 1106.0], [83.9, 1106.0], [84.0, 1129.0], [84.1, 1129.0], [84.2, 1129.0], [84.3, 1129.0], [84.4, 1129.0], [84.5, 1135.0], [84.6, 1135.0], [84.7, 1135.0], [84.8, 1135.0], [84.9, 1135.0], [85.0, 1173.0], [85.1, 1173.0], [85.2, 1173.0], [85.3, 1173.0], [85.4, 1173.0], [85.5, 1177.0], [85.6, 1177.0], [85.7, 1177.0], [85.8, 1177.0], [85.9, 1177.0], [86.0, 1179.0], [86.1, 1179.0], [86.2, 1179.0], [86.3, 1179.0], [86.4, 1179.0], [86.5, 1204.0], [86.6, 1204.0], [86.7, 1204.0], [86.8, 1204.0], [86.9, 1204.0], [87.0, 1215.0], [87.1, 1215.0], [87.2, 1215.0], [87.3, 1215.0], [87.4, 1215.0], [87.5, 1216.0], [87.6, 1216.0], [87.7, 1216.0], [87.8, 1216.0], [87.9, 1216.0], [88.0, 1232.0], [88.1, 1232.0], [88.2, 1232.0], [88.3, 1232.0], [88.4, 1232.0], [88.5, 1236.0], [88.6, 1236.0], [88.7, 1236.0], [88.8, 1236.0], [88.9, 1236.0], [89.0, 1240.0], [89.1, 1240.0], [89.2, 1240.0], [89.3, 1240.0], [89.4, 1240.0], [89.5, 1248.0], [89.6, 1248.0], [89.7, 1248.0], [89.8, 1248.0], [89.9, 1248.0], [90.0, 1253.0], [90.1, 1253.0], [90.2, 1253.0], [90.3, 1253.0], [90.4, 1253.0], [90.5, 1253.0], [90.6, 1253.0], [90.7, 1253.0], [90.8, 1253.0], [90.9, 1253.0], [91.0, 1254.0], [91.1, 1254.0], [91.2, 1254.0], [91.3, 1254.0], [91.4, 1254.0], [91.5, 1281.0], [91.6, 1281.0], [91.7, 1281.0], [91.8, 1281.0], [91.9, 1281.0], [92.0, 1287.0], [92.1, 1287.0], [92.2, 1287.0], [92.3, 1287.0], [92.4, 1287.0], [92.5, 1310.0], [92.6, 1310.0], [92.7, 1310.0], [92.8, 1310.0], [92.9, 1310.0], [93.0, 1317.0], [93.1, 1317.0], [93.2, 1317.0], [93.3, 1317.0], [93.4, 1317.0], [93.5, 1323.0], [93.6, 1323.0], [93.7, 1323.0], [93.8, 1323.0], [93.9, 1323.0], [94.0, 1355.0], [94.1, 1355.0], [94.2, 1355.0], [94.3, 1355.0], [94.4, 1355.0], [94.5, 1362.0], [94.6, 1362.0], [94.7, 1362.0], [94.8, 1362.0], [94.9, 1362.0], [95.0, 1362.0], [95.1, 1362.0], [95.2, 1362.0], [95.3, 1362.0], [95.4, 1362.0], [95.5, 1367.0], [95.6, 1367.0], [95.7, 1367.0], [95.8, 1367.0], [95.9, 1367.0], [96.0, 1373.0], [96.1, 1373.0], [96.2, 1373.0], [96.3, 1373.0], [96.4, 1373.0], [96.5, 1382.0], [96.6, 1382.0], [96.7, 1382.0], [96.8, 1382.0], [96.9, 1382.0], [97.0, 1398.0], [97.1, 1398.0], [97.2, 1398.0], [97.3, 1398.0], [97.4, 1398.0], [97.5, 1418.0], [97.6, 1418.0], [97.7, 1418.0], [97.8, 1418.0], [97.9, 1418.0], [98.0, 1441.0], [98.1, 1441.0], [98.2, 1441.0], [98.3, 1441.0], [98.4, 1441.0], [98.5, 1817.0], [98.6, 1817.0], [98.7, 1817.0], [98.8, 1817.0], [98.9, 1817.0], [99.0, 2594.0], [99.1, 2594.0], [99.2, 2594.0], [99.3, 2594.0], [99.4, 2594.0], [99.5, 2605.0], [99.6, 2605.0], [99.7, 2605.0], [99.8, 2605.0], [99.9, 2605.0]], "isOverall": false, "label": "acessar google", "isController": false}, {"data": [[0.0, 334.0], [0.1, 334.0], [0.2, 334.0], [0.3, 334.0], [0.4, 334.0], [0.5, 342.0], [0.6, 342.0], [0.7, 342.0], [0.8, 342.0], [0.9, 342.0], [1.0, 346.0], [1.1, 346.0], [1.2, 346.0], [1.3, 346.0], [1.4, 346.0], [1.5, 359.0], [1.6, 359.0], [1.7, 359.0], [1.8, 359.0], [1.9, 359.0], [2.0, 361.0], [2.1, 361.0], [2.2, 361.0], [2.3, 361.0], [2.4, 361.0], [2.5, 361.0], [2.6, 361.0], [2.7, 361.0], [2.8, 361.0], [2.9, 361.0], [3.0, 507.0], [3.1, 507.0], [3.2, 507.0], [3.3, 507.0], [3.4, 507.0], [3.5, 538.0], [3.6, 538.0], [3.7, 538.0], [3.8, 538.0], [3.9, 538.0], [4.0, 543.0], [4.1, 543.0], [4.2, 543.0], [4.3, 543.0], [4.4, 543.0], [4.5, 571.0], [4.6, 571.0], [4.7, 571.0], [4.8, 571.0], [4.9, 571.0], [5.0, 696.0], [5.1, 696.0], [5.2, 696.0], [5.3, 696.0], [5.4, 696.0], [5.5, 714.0], [5.6, 714.0], [5.7, 714.0], [5.8, 714.0], [5.9, 714.0], [6.0, 816.0], [6.1, 816.0], [6.2, 816.0], [6.3, 816.0], [6.4, 816.0], [6.5, 926.0], [6.6, 926.0], [6.7, 926.0], [6.8, 926.0], [6.9, 926.0], [7.0, 1029.0], [7.1, 1029.0], [7.2, 1029.0], [7.3, 1029.0], [7.4, 1029.0], [7.5, 1326.0], [7.6, 1326.0], [7.7, 1326.0], [7.8, 1326.0], [7.9, 1326.0], [8.0, 1445.0], [8.1, 1445.0], [8.2, 1445.0], [8.3, 1445.0], [8.4, 1445.0], [8.5, 1447.0], [8.6, 1447.0], [8.7, 1447.0], [8.8, 1447.0], [8.9, 1447.0], [9.0, 1461.0], [9.1, 1461.0], [9.2, 1461.0], [9.3, 1461.0], [9.4, 1461.0], [9.5, 1482.0], [9.6, 1482.0], [9.7, 1482.0], [9.8, 1482.0], [9.9, 1482.0], [10.0, 1484.0], [10.1, 1484.0], [10.2, 1484.0], [10.3, 1484.0], [10.4, 1484.0], [10.5, 1495.0], [10.6, 1495.0], [10.7, 1495.0], [10.8, 1495.0], [10.9, 1495.0], [11.0, 1499.0], [11.1, 1499.0], [11.2, 1499.0], [11.3, 1499.0], [11.4, 1499.0], [11.5, 1526.0], [11.6, 1526.0], [11.7, 1526.0], [11.8, 1526.0], [11.9, 1526.0], [12.0, 1535.0], [12.1, 1535.0], [12.2, 1535.0], [12.3, 1535.0], [12.4, 1535.0], [12.5, 1546.0], [12.6, 1546.0], [12.7, 1546.0], [12.8, 1546.0], [12.9, 1546.0], [13.0, 1561.0], [13.1, 1561.0], [13.2, 1561.0], [13.3, 1561.0], [13.4, 1561.0], [13.5, 1565.0], [13.6, 1565.0], [13.7, 1565.0], [13.8, 1565.0], [13.9, 1565.0], [14.0, 1570.0], [14.1, 1570.0], [14.2, 1570.0], [14.3, 1570.0], [14.4, 1570.0], [14.5, 1575.0], [14.6, 1575.0], [14.7, 1575.0], [14.8, 1575.0], [14.9, 1575.0], [15.0, 1618.0], [15.1, 1618.0], [15.2, 1618.0], [15.3, 1618.0], [15.4, 1618.0], [15.5, 1621.0], [15.6, 1621.0], [15.7, 1621.0], [15.8, 1621.0], [15.9, 1621.0], [16.0, 1624.0], [16.1, 1624.0], [16.2, 1624.0], [16.3, 1624.0], [16.4, 1624.0], [16.5, 1628.0], [16.6, 1628.0], [16.7, 1628.0], [16.8, 1628.0], [16.9, 1628.0], [17.0, 1658.0], [17.1, 1658.0], [17.2, 1658.0], [17.3, 1658.0], [17.4, 1658.0], [17.5, 1659.0], [17.6, 1659.0], [17.7, 1659.0], [17.8, 1659.0], [17.9, 1659.0], [18.0, 1668.0], [18.1, 1668.0], [18.2, 1668.0], [18.3, 1668.0], [18.4, 1668.0], [18.5, 1671.0], [18.6, 1671.0], [18.7, 1671.0], [18.8, 1671.0], [18.9, 1671.0], [19.0, 1680.0], [19.1, 1680.0], [19.2, 1680.0], [19.3, 1680.0], [19.4, 1680.0], [19.5, 1684.0], [19.6, 1684.0], [19.7, 1684.0], [19.8, 1684.0], [19.9, 1684.0], [20.0, 1688.0], [20.1, 1688.0], [20.2, 1688.0], [20.3, 1688.0], [20.4, 1688.0], [20.5, 1692.0], [20.6, 1692.0], [20.7, 1692.0], [20.8, 1692.0], [20.9, 1692.0], [21.0, 1734.0], [21.1, 1734.0], [21.2, 1734.0], [21.3, 1734.0], [21.4, 1734.0], [21.5, 1748.0], [21.6, 1748.0], [21.7, 1748.0], [21.8, 1748.0], [21.9, 1748.0], [22.0, 1748.0], [22.1, 1748.0], [22.2, 1748.0], [22.3, 1748.0], [22.4, 1748.0], [22.5, 1750.0], [22.6, 1750.0], [22.7, 1750.0], [22.8, 1750.0], [22.9, 1750.0], [23.0, 1754.0], [23.1, 1754.0], [23.2, 1754.0], [23.3, 1754.0], [23.4, 1754.0], [23.5, 1760.0], [23.6, 1760.0], [23.7, 1760.0], [23.8, 1760.0], [23.9, 1760.0], [24.0, 1763.0], [24.1, 1763.0], [24.2, 1763.0], [24.3, 1763.0], [24.4, 1763.0], [24.5, 1764.0], [24.6, 1764.0], [24.7, 1764.0], [24.8, 1764.0], [24.9, 1764.0], [25.0, 1767.0], [25.1, 1767.0], [25.2, 1767.0], [25.3, 1767.0], [25.4, 1767.0], [25.5, 1768.0], [25.6, 1768.0], [25.7, 1768.0], [25.8, 1768.0], [25.9, 1768.0], [26.0, 1771.0], [26.1, 1771.0], [26.2, 1771.0], [26.3, 1771.0], [26.4, 1771.0], [26.5, 1773.0], [26.6, 1773.0], [26.7, 1773.0], [26.8, 1773.0], [26.9, 1773.0], [27.0, 1785.0], [27.1, 1785.0], [27.2, 1785.0], [27.3, 1785.0], [27.4, 1785.0], [27.5, 1792.0], [27.6, 1792.0], [27.7, 1792.0], [27.8, 1792.0], [27.9, 1792.0], [28.0, 1806.0], [28.1, 1806.0], [28.2, 1806.0], [28.3, 1806.0], [28.4, 1806.0], [28.5, 1813.0], [28.6, 1813.0], [28.7, 1813.0], [28.8, 1813.0], [28.9, 1813.0], [29.0, 1813.0], [29.1, 1813.0], [29.2, 1813.0], [29.3, 1813.0], [29.4, 1813.0], [29.5, 1814.0], [29.6, 1814.0], [29.7, 1814.0], [29.8, 1814.0], [29.9, 1814.0], [30.0, 1817.0], [30.1, 1817.0], [30.2, 1817.0], [30.3, 1817.0], [30.4, 1817.0], [30.5, 1821.0], [30.6, 1821.0], [30.7, 1821.0], [30.8, 1821.0], [30.9, 1821.0], [31.0, 1830.0], [31.1, 1830.0], [31.2, 1830.0], [31.3, 1830.0], [31.4, 1830.0], [31.5, 1832.0], [31.6, 1832.0], [31.7, 1832.0], [31.8, 1832.0], [31.9, 1832.0], [32.0, 1833.0], [32.1, 1833.0], [32.2, 1833.0], [32.3, 1833.0], [32.4, 1833.0], [32.5, 1835.0], [32.6, 1835.0], [32.7, 1835.0], [32.8, 1835.0], [32.9, 1835.0], [33.0, 1844.0], [33.1, 1844.0], [33.2, 1844.0], [33.3, 1844.0], [33.4, 1844.0], [33.5, 1846.0], [33.6, 1846.0], [33.7, 1846.0], [33.8, 1846.0], [33.9, 1846.0], [34.0, 1852.0], [34.1, 1852.0], [34.2, 1852.0], [34.3, 1852.0], [34.4, 1852.0], [34.5, 1857.0], [34.6, 1857.0], [34.7, 1857.0], [34.8, 1857.0], [34.9, 1857.0], [35.0, 1860.0], [35.1, 1860.0], [35.2, 1860.0], [35.3, 1860.0], [35.4, 1860.0], [35.5, 1863.0], [35.6, 1863.0], [35.7, 1863.0], [35.8, 1863.0], [35.9, 1863.0], [36.0, 1863.0], [36.1, 1863.0], [36.2, 1863.0], [36.3, 1863.0], [36.4, 1863.0], [36.5, 1879.0], [36.6, 1879.0], [36.7, 1879.0], [36.8, 1879.0], [36.9, 1879.0], [37.0, 1885.0], [37.1, 1885.0], [37.2, 1885.0], [37.3, 1885.0], [37.4, 1885.0], [37.5, 1888.0], [37.6, 1888.0], [37.7, 1888.0], [37.8, 1888.0], [37.9, 1888.0], [38.0, 1890.0], [38.1, 1890.0], [38.2, 1890.0], [38.3, 1890.0], [38.4, 1890.0], [38.5, 1895.0], [38.6, 1895.0], [38.7, 1895.0], [38.8, 1895.0], [38.9, 1895.0], [39.0, 1909.0], [39.1, 1909.0], [39.2, 1909.0], [39.3, 1909.0], [39.4, 1909.0], [39.5, 1910.0], [39.6, 1910.0], [39.7, 1910.0], [39.8, 1910.0], [39.9, 1910.0], [40.0, 1914.0], [40.1, 1914.0], [40.2, 1914.0], [40.3, 1914.0], [40.4, 1914.0], [40.5, 1931.0], [40.6, 1931.0], [40.7, 1931.0], [40.8, 1931.0], [40.9, 1931.0], [41.0, 1933.0], [41.1, 1933.0], [41.2, 1933.0], [41.3, 1933.0], [41.4, 1933.0], [41.5, 1939.0], [41.6, 1939.0], [41.7, 1939.0], [41.8, 1939.0], [41.9, 1939.0], [42.0, 1943.0], [42.1, 1943.0], [42.2, 1943.0], [42.3, 1943.0], [42.4, 1943.0], [42.5, 1955.0], [42.6, 1955.0], [42.7, 1955.0], [42.8, 1955.0], [42.9, 1955.0], [43.0, 1961.0], [43.1, 1961.0], [43.2, 1961.0], [43.3, 1961.0], [43.4, 1961.0], [43.5, 1995.0], [43.6, 1995.0], [43.7, 1995.0], [43.8, 1995.0], [43.9, 1995.0], [44.0, 2000.0], [44.1, 2000.0], [44.2, 2000.0], [44.3, 2000.0], [44.4, 2000.0], [44.5, 2013.0], [44.6, 2013.0], [44.7, 2013.0], [44.8, 2013.0], [44.9, 2013.0], [45.0, 2016.0], [45.1, 2016.0], [45.2, 2016.0], [45.3, 2016.0], [45.4, 2016.0], [45.5, 2019.0], [45.6, 2019.0], [45.7, 2019.0], [45.8, 2019.0], [45.9, 2019.0], [46.0, 2093.0], [46.1, 2093.0], [46.2, 2093.0], [46.3, 2093.0], [46.4, 2093.0], [46.5, 2094.0], [46.6, 2094.0], [46.7, 2094.0], [46.8, 2094.0], [46.9, 2094.0], [47.0, 2095.0], [47.1, 2095.0], [47.2, 2095.0], [47.3, 2095.0], [47.4, 2095.0], [47.5, 2096.0], [47.6, 2096.0], [47.7, 2096.0], [47.8, 2096.0], [47.9, 2096.0], [48.0, 2124.0], [48.1, 2124.0], [48.2, 2124.0], [48.3, 2124.0], [48.4, 2124.0], [48.5, 2127.0], [48.6, 2127.0], [48.7, 2127.0], [48.8, 2127.0], [48.9, 2127.0], [49.0, 2135.0], [49.1, 2135.0], [49.2, 2135.0], [49.3, 2135.0], [49.4, 2135.0], [49.5, 2138.0], [49.6, 2138.0], [49.7, 2138.0], [49.8, 2138.0], [49.9, 2138.0], [50.0, 2143.0], [50.1, 2143.0], [50.2, 2143.0], [50.3, 2143.0], [50.4, 2143.0], [50.5, 2144.0], [50.6, 2144.0], [50.7, 2144.0], [50.8, 2144.0], [50.9, 2144.0], [51.0, 2147.0], [51.1, 2147.0], [51.2, 2147.0], [51.3, 2147.0], [51.4, 2147.0], [51.5, 2149.0], [51.6, 2149.0], [51.7, 2149.0], [51.8, 2149.0], [51.9, 2149.0], [52.0, 2236.0], [52.1, 2236.0], [52.2, 2236.0], [52.3, 2236.0], [52.4, 2236.0], [52.5, 2272.0], [52.6, 2272.0], [52.7, 2272.0], [52.8, 2272.0], [52.9, 2272.0], [53.0, 2805.0], [53.1, 2805.0], [53.2, 2805.0], [53.3, 2805.0], [53.4, 2805.0], [53.5, 7385.0], [53.6, 7385.0], [53.7, 7385.0], [53.8, 7385.0], [53.9, 7385.0], [54.0, 7391.0], [54.1, 7391.0], [54.2, 7391.0], [54.3, 7391.0], [54.4, 7391.0], [54.5, 7401.0], [54.6, 7401.0], [54.7, 7401.0], [54.8, 7401.0], [54.9, 7401.0], [55.0, 7423.0], [55.1, 7423.0], [55.2, 7423.0], [55.3, 7423.0], [55.4, 7423.0], [55.5, 7432.0], [55.6, 7432.0], [55.7, 7432.0], [55.8, 7432.0], [55.9, 7432.0], [56.0, 7434.0], [56.1, 7434.0], [56.2, 7434.0], [56.3, 7434.0], [56.4, 7434.0], [56.5, 7435.0], [56.6, 7435.0], [56.7, 7435.0], [56.8, 7435.0], [56.9, 7435.0], [57.0, 7439.0], [57.1, 7439.0], [57.2, 7439.0], [57.3, 7439.0], [57.4, 7439.0], [57.5, 7442.0], [57.6, 7442.0], [57.7, 7442.0], [57.8, 7442.0], [57.9, 7442.0], [58.0, 7443.0], [58.1, 7443.0], [58.2, 7443.0], [58.3, 7443.0], [58.4, 7443.0], [58.5, 7444.0], [58.6, 7444.0], [58.7, 7444.0], [58.8, 7444.0], [58.9, 7444.0], [59.0, 7451.0], [59.1, 7451.0], [59.2, 7451.0], [59.3, 7451.0], [59.4, 7451.0], [59.5, 7457.0], [59.6, 7457.0], [59.7, 7457.0], [59.8, 7457.0], [59.9, 7457.0], [60.0, 7457.0], [60.1, 7457.0], [60.2, 7457.0], [60.3, 7457.0], [60.4, 7457.0], [60.5, 7461.0], [60.6, 7461.0], [60.7, 7461.0], [60.8, 7461.0], [60.9, 7461.0], [61.0, 7463.0], [61.1, 7463.0], [61.2, 7463.0], [61.3, 7463.0], [61.4, 7463.0], [61.5, 7464.0], [61.6, 7464.0], [61.7, 7464.0], [61.8, 7464.0], [61.9, 7464.0], [62.0, 7465.0], [62.1, 7465.0], [62.2, 7465.0], [62.3, 7465.0], [62.4, 7465.0], [62.5, 7469.0], [62.6, 7469.0], [62.7, 7469.0], [62.8, 7469.0], [62.9, 7469.0], [63.0, 7477.0], [63.1, 7477.0], [63.2, 7477.0], [63.3, 7477.0], [63.4, 7477.0], [63.5, 7478.0], [63.6, 7478.0], [63.7, 7478.0], [63.8, 7478.0], [63.9, 7478.0], [64.0, 7489.0], [64.1, 7489.0], [64.2, 7489.0], [64.3, 7489.0], [64.4, 7489.0], [64.5, 7494.0], [64.6, 7494.0], [64.7, 7494.0], [64.8, 7494.0], [64.9, 7494.0], [65.0, 7498.0], [65.1, 7498.0], [65.2, 7498.0], [65.3, 7498.0], [65.4, 7498.0], [65.5, 7504.0], [65.6, 7504.0], [65.7, 7504.0], [65.8, 7504.0], [65.9, 7504.0], [66.0, 7505.0], [66.1, 7505.0], [66.2, 7505.0], [66.3, 7505.0], [66.4, 7505.0], [66.5, 7518.0], [66.6, 7518.0], [66.7, 7518.0], [66.8, 7518.0], [66.9, 7518.0], [67.0, 7534.0], [67.1, 7534.0], [67.2, 7534.0], [67.3, 7534.0], [67.4, 7534.0], [67.5, 7540.0], [67.6, 7540.0], [67.7, 7540.0], [67.8, 7540.0], [67.9, 7540.0], [68.0, 7546.0], [68.1, 7546.0], [68.2, 7546.0], [68.3, 7546.0], [68.4, 7546.0], [68.5, 7547.0], [68.6, 7547.0], [68.7, 7547.0], [68.8, 7547.0], [68.9, 7547.0], [69.0, 7550.0], [69.1, 7550.0], [69.2, 7550.0], [69.3, 7550.0], [69.4, 7550.0], [69.5, 7551.0], [69.6, 7551.0], [69.7, 7551.0], [69.8, 7551.0], [69.9, 7551.0], [70.0, 7551.0], [70.1, 7551.0], [70.2, 7551.0], [70.3, 7551.0], [70.4, 7551.0], [70.5, 7555.0], [70.6, 7555.0], [70.7, 7555.0], [70.8, 7555.0], [70.9, 7555.0], [71.0, 7558.0], [71.1, 7558.0], [71.2, 7558.0], [71.3, 7558.0], [71.4, 7558.0], [71.5, 7569.0], [71.6, 7569.0], [71.7, 7569.0], [71.8, 7569.0], [71.9, 7569.0], [72.0, 7569.0], [72.1, 7569.0], [72.2, 7569.0], [72.3, 7569.0], [72.4, 7569.0], [72.5, 7577.0], [72.6, 7577.0], [72.7, 7577.0], [72.8, 7577.0], [72.9, 7577.0], [73.0, 7579.0], [73.1, 7579.0], [73.2, 7579.0], [73.3, 7579.0], [73.4, 7579.0], [73.5, 7583.0], [73.6, 7583.0], [73.7, 7583.0], [73.8, 7583.0], [73.9, 7583.0], [74.0, 7591.0], [74.1, 7591.0], [74.2, 7591.0], [74.3, 7591.0], [74.4, 7591.0], [74.5, 7595.0], [74.6, 7595.0], [74.7, 7595.0], [74.8, 7595.0], [74.9, 7595.0], [75.0, 7608.0], [75.1, 7608.0], [75.2, 7608.0], [75.3, 7608.0], [75.4, 7608.0], [75.5, 7608.0], [75.6, 7608.0], [75.7, 7608.0], [75.8, 7608.0], [75.9, 7608.0], [76.0, 7611.0], [76.1, 7611.0], [76.2, 7611.0], [76.3, 7611.0], [76.4, 7611.0], [76.5, 7612.0], [76.6, 7612.0], [76.7, 7612.0], [76.8, 7612.0], [76.9, 7612.0], [77.0, 7613.0], [77.1, 7613.0], [77.2, 7613.0], [77.3, 7613.0], [77.4, 7613.0], [77.5, 7618.0], [77.6, 7618.0], [77.7, 7618.0], [77.8, 7618.0], [77.9, 7618.0], [78.0, 7619.0], [78.1, 7619.0], [78.2, 7619.0], [78.3, 7619.0], [78.4, 7619.0], [78.5, 7630.0], [78.6, 7630.0], [78.7, 7630.0], [78.8, 7630.0], [78.9, 7630.0], [79.0, 7631.0], [79.1, 7631.0], [79.2, 7631.0], [79.3, 7631.0], [79.4, 7631.0], [79.5, 7634.0], [79.6, 7634.0], [79.7, 7634.0], [79.8, 7634.0], [79.9, 7634.0], [80.0, 7637.0], [80.1, 7637.0], [80.2, 7637.0], [80.3, 7637.0], [80.4, 7637.0], [80.5, 7641.0], [80.6, 7641.0], [80.7, 7641.0], [80.8, 7641.0], [80.9, 7641.0], [81.0, 7678.0], [81.1, 7678.0], [81.2, 7678.0], [81.3, 7678.0], [81.4, 7678.0], [81.5, 7678.0], [81.6, 7678.0], [81.7, 7678.0], [81.8, 7678.0], [81.9, 7678.0], [82.0, 7692.0], [82.1, 7692.0], [82.2, 7692.0], [82.3, 7692.0], [82.4, 7692.0], [82.5, 7710.0], [82.6, 7710.0], [82.7, 7710.0], [82.8, 7710.0], [82.9, 7710.0], [83.0, 7715.0], [83.1, 7715.0], [83.2, 7715.0], [83.3, 7715.0], [83.4, 7715.0], [83.5, 7718.0], [83.6, 7718.0], [83.7, 7718.0], [83.8, 7718.0], [83.9, 7718.0], [84.0, 7720.0], [84.1, 7720.0], [84.2, 7720.0], [84.3, 7720.0], [84.4, 7720.0], [84.5, 7722.0], [84.6, 7722.0], [84.7, 7722.0], [84.8, 7722.0], [84.9, 7722.0], [85.0, 7733.0], [85.1, 7733.0], [85.2, 7733.0], [85.3, 7733.0], [85.4, 7733.0], [85.5, 7735.0], [85.6, 7735.0], [85.7, 7735.0], [85.8, 7735.0], [85.9, 7735.0], [86.0, 7750.0], [86.1, 7750.0], [86.2, 7750.0], [86.3, 7750.0], [86.4, 7750.0], [86.5, 7753.0], [86.6, 7753.0], [86.7, 7753.0], [86.8, 7753.0], [86.9, 7753.0], [87.0, 7755.0], [87.1, 7755.0], [87.2, 7755.0], [87.3, 7755.0], [87.4, 7755.0], [87.5, 7756.0], [87.6, 7756.0], [87.7, 7756.0], [87.8, 7756.0], [87.9, 7756.0], [88.0, 7759.0], [88.1, 7759.0], [88.2, 7759.0], [88.3, 7759.0], [88.4, 7759.0], [88.5, 7768.0], [88.6, 7768.0], [88.7, 7768.0], [88.8, 7768.0], [88.9, 7768.0], [89.0, 7770.0], [89.1, 7770.0], [89.2, 7770.0], [89.3, 7770.0], [89.4, 7770.0], [89.5, 7775.0], [89.6, 7775.0], [89.7, 7775.0], [89.8, 7775.0], [89.9, 7775.0], [90.0, 7779.0], [90.1, 7779.0], [90.2, 7779.0], [90.3, 7779.0], [90.4, 7779.0], [90.5, 7803.0], [90.6, 7803.0], [90.7, 7803.0], [90.8, 7803.0], [90.9, 7803.0], [91.0, 7830.0], [91.1, 7830.0], [91.2, 7830.0], [91.3, 7830.0], [91.4, 7830.0], [91.5, 15413.0], [91.6, 15413.0], [91.7, 15413.0], [91.8, 15413.0], [91.9, 15413.0], [92.0, 15525.0], [92.1, 15525.0], [92.2, 15525.0], [92.3, 15525.0], [92.4, 15525.0], [92.5, 15529.0], [92.6, 15529.0], [92.7, 15529.0], [92.8, 15529.0], [92.9, 15529.0], [93.0, 15532.0], [93.1, 15532.0], [93.2, 15532.0], [93.3, 15532.0], [93.4, 15532.0], [93.5, 15532.0], [93.6, 15532.0], [93.7, 15532.0], [93.8, 15532.0], [93.9, 15532.0], [94.0, 15550.0], [94.1, 15550.0], [94.2, 15550.0], [94.3, 15550.0], [94.4, 15550.0], [94.5, 15621.0], [94.6, 15621.0], [94.7, 15621.0], [94.8, 15621.0], [94.9, 15621.0], [95.0, 15640.0], [95.1, 15640.0], [95.2, 15640.0], [95.3, 15640.0], [95.4, 15640.0], [95.5, 15643.0], [95.6, 15643.0], [95.7, 15643.0], [95.8, 15643.0], [95.9, 15643.0], [96.0, 15643.0], [96.1, 15643.0], [96.2, 15643.0], [96.3, 15643.0], [96.4, 15643.0], [96.5, 15651.0], [96.6, 15651.0], [96.7, 15651.0], [96.8, 15651.0], [96.9, 15651.0], [97.0, 15652.0], [97.1, 15652.0], [97.2, 15652.0], [97.3, 15652.0], [97.4, 15652.0], [97.5, 15652.0], [97.6, 15652.0], [97.7, 15652.0], [97.8, 15652.0], [97.9, 15652.0], [98.0, 15666.0], [98.1, 15666.0], [98.2, 15666.0], [98.3, 15666.0], [98.4, 15666.0], [98.5, 15672.0], [98.6, 15672.0], [98.7, 15672.0], [98.8, 15672.0], [98.9, 15672.0], [99.0, 15679.0], [99.1, 15679.0], [99.2, 15679.0], [99.3, 15679.0], [99.4, 15679.0], [99.5, 15680.0], [99.6, 15680.0], [99.7, 15680.0], [99.8, 15680.0], [99.9, 15680.0]], "isOverall": false, "label": "acessar bing-1", "isController": false}, {"data": [[0.0, 1169.0], [0.1, 1169.0], [0.2, 1169.0], [0.3, 1169.0], [0.4, 1169.0], [0.5, 1348.0], [0.6, 1348.0], [0.7, 1348.0], [0.8, 1348.0], [0.9, 1348.0], [1.0, 1597.0], [1.1, 1597.0], [1.2, 1597.0], [1.3, 1597.0], [1.4, 1597.0], [1.5, 1614.0], [1.6, 1614.0], [1.7, 1614.0], [1.8, 1614.0], [1.9, 1614.0], [2.0, 1624.0], [2.1, 1624.0], [2.2, 1624.0], [2.3, 1624.0], [2.4, 1624.0], [2.5, 1776.0], [2.6, 1776.0], [2.7, 1776.0], [2.8, 1776.0], [2.9, 1776.0], [3.0, 1807.0], [3.1, 1807.0], [3.2, 1807.0], [3.3, 1807.0], [3.4, 1807.0], [3.5, 1808.0], [3.6, 1808.0], [3.7, 1808.0], [3.8, 1808.0], [3.9, 1808.0], [4.0, 2005.0], [4.1, 2005.0], [4.2, 2005.0], [4.3, 2005.0], [4.4, 2005.0], [4.5, 2127.0], [4.6, 2127.0], [4.7, 2127.0], [4.8, 2127.0], [4.9, 2127.0], [5.0, 2166.0], [5.1, 2166.0], [5.2, 2166.0], [5.3, 2166.0], [5.4, 2166.0], [5.5, 2171.0], [5.6, 2171.0], [5.7, 2171.0], [5.8, 2171.0], [5.9, 2171.0], [6.0, 2175.0], [6.1, 2175.0], [6.2, 2175.0], [6.3, 2175.0], [6.4, 2175.0], [6.5, 2220.0], [6.6, 2220.0], [6.7, 2220.0], [6.8, 2220.0], [6.9, 2220.0], [7.0, 2265.0], [7.1, 2265.0], [7.2, 2265.0], [7.3, 2265.0], [7.4, 2265.0], [7.5, 2325.0], [7.6, 2325.0], [7.7, 2325.0], [7.8, 2325.0], [7.9, 2325.0], [8.0, 2357.0], [8.1, 2357.0], [8.2, 2357.0], [8.3, 2357.0], [8.4, 2357.0], [8.5, 2361.0], [8.6, 2361.0], [8.7, 2361.0], [8.8, 2361.0], [8.9, 2361.0], [9.0, 2370.0], [9.1, 2370.0], [9.2, 2370.0], [9.3, 2370.0], [9.4, 2370.0], [9.5, 2372.0], [9.6, 2372.0], [9.7, 2372.0], [9.8, 2372.0], [9.9, 2372.0], [10.0, 2390.0], [10.1, 2390.0], [10.2, 2390.0], [10.3, 2390.0], [10.4, 2390.0], [10.5, 2404.0], [10.6, 2404.0], [10.7, 2404.0], [10.8, 2404.0], [10.9, 2404.0], [11.0, 2425.0], [11.1, 2425.0], [11.2, 2425.0], [11.3, 2425.0], [11.4, 2425.0], [11.5, 2448.0], [11.6, 2448.0], [11.7, 2448.0], [11.8, 2448.0], [11.9, 2448.0], [12.0, 2450.0], [12.1, 2450.0], [12.2, 2450.0], [12.3, 2450.0], [12.4, 2450.0], [12.5, 2456.0], [12.6, 2456.0], [12.7, 2456.0], [12.8, 2456.0], [12.9, 2456.0], [13.0, 2484.0], [13.1, 2484.0], [13.2, 2484.0], [13.3, 2484.0], [13.4, 2484.0], [13.5, 2485.0], [13.6, 2485.0], [13.7, 2485.0], [13.8, 2485.0], [13.9, 2485.0], [14.0, 2497.0], [14.1, 2497.0], [14.2, 2497.0], [14.3, 2497.0], [14.4, 2497.0], [14.5, 2516.0], [14.6, 2516.0], [14.7, 2516.0], [14.8, 2516.0], [14.9, 2516.0], [15.0, 2520.0], [15.1, 2520.0], [15.2, 2520.0], [15.3, 2520.0], [15.4, 2520.0], [15.5, 2526.0], [15.6, 2526.0], [15.7, 2526.0], [15.8, 2526.0], [15.9, 2526.0], [16.0, 2548.0], [16.1, 2548.0], [16.2, 2548.0], [16.3, 2548.0], [16.4, 2548.0], [16.5, 2550.0], [16.6, 2550.0], [16.7, 2550.0], [16.8, 2550.0], [16.9, 2550.0], [17.0, 2551.0], [17.1, 2551.0], [17.2, 2551.0], [17.3, 2551.0], [17.4, 2551.0], [17.5, 2561.0], [17.6, 2561.0], [17.7, 2561.0], [17.8, 2561.0], [17.9, 2561.0], [18.0, 2565.0], [18.1, 2565.0], [18.2, 2565.0], [18.3, 2565.0], [18.4, 2565.0], [18.5, 2569.0], [18.6, 2569.0], [18.7, 2569.0], [18.8, 2569.0], [18.9, 2569.0], [19.0, 2573.0], [19.1, 2573.0], [19.2, 2573.0], [19.3, 2573.0], [19.4, 2573.0], [19.5, 2576.0], [19.6, 2576.0], [19.7, 2576.0], [19.8, 2576.0], [19.9, 2576.0], [20.0, 2588.0], [20.1, 2588.0], [20.2, 2588.0], [20.3, 2588.0], [20.4, 2588.0], [20.5, 2601.0], [20.6, 2601.0], [20.7, 2601.0], [20.8, 2601.0], [20.9, 2601.0], [21.0, 2601.0], [21.1, 2601.0], [21.2, 2601.0], [21.3, 2601.0], [21.4, 2601.0], [21.5, 2605.0], [21.6, 2605.0], [21.7, 2605.0], [21.8, 2605.0], [21.9, 2605.0], [22.0, 2606.0], [22.1, 2606.0], [22.2, 2606.0], [22.3, 2606.0], [22.4, 2606.0], [22.5, 2607.0], [22.6, 2607.0], [22.7, 2607.0], [22.8, 2607.0], [22.9, 2607.0], [23.0, 2608.0], [23.1, 2608.0], [23.2, 2608.0], [23.3, 2608.0], [23.4, 2608.0], [23.5, 2622.0], [23.6, 2622.0], [23.7, 2622.0], [23.8, 2622.0], [23.9, 2622.0], [24.0, 2625.0], [24.1, 2625.0], [24.2, 2625.0], [24.3, 2625.0], [24.4, 2625.0], [24.5, 2629.0], [24.6, 2629.0], [24.7, 2629.0], [24.8, 2629.0], [24.9, 2629.0], [25.0, 2642.0], [25.1, 2642.0], [25.2, 2642.0], [25.3, 2642.0], [25.4, 2642.0], [25.5, 2650.0], [25.6, 2650.0], [25.7, 2650.0], [25.8, 2650.0], [25.9, 2650.0], [26.0, 2659.0], [26.1, 2659.0], [26.2, 2659.0], [26.3, 2659.0], [26.4, 2659.0], [26.5, 2672.0], [26.6, 2672.0], [26.7, 2672.0], [26.8, 2672.0], [26.9, 2672.0], [27.0, 2685.0], [27.1, 2685.0], [27.2, 2685.0], [27.3, 2685.0], [27.4, 2685.0], [27.5, 2690.0], [27.6, 2690.0], [27.7, 2690.0], [27.8, 2690.0], [27.9, 2690.0], [28.0, 2703.0], [28.1, 2703.0], [28.2, 2703.0], [28.3, 2703.0], [28.4, 2703.0], [28.5, 2726.0], [28.6, 2726.0], [28.7, 2726.0], [28.8, 2726.0], [28.9, 2726.0], [29.0, 2737.0], [29.1, 2737.0], [29.2, 2737.0], [29.3, 2737.0], [29.4, 2737.0], [29.5, 2740.0], [29.6, 2740.0], [29.7, 2740.0], [29.8, 2740.0], [29.9, 2740.0], [30.0, 2762.0], [30.1, 2762.0], [30.2, 2762.0], [30.3, 2762.0], [30.4, 2762.0], [30.5, 2768.0], [30.6, 2768.0], [30.7, 2768.0], [30.8, 2768.0], [30.9, 2768.0], [31.0, 2797.0], [31.1, 2797.0], [31.2, 2797.0], [31.3, 2797.0], [31.4, 2797.0], [31.5, 2811.0], [31.6, 2811.0], [31.7, 2811.0], [31.8, 2811.0], [31.9, 2811.0], [32.0, 2812.0], [32.1, 2812.0], [32.2, 2812.0], [32.3, 2812.0], [32.4, 2812.0], [32.5, 2813.0], [32.6, 2813.0], [32.7, 2813.0], [32.8, 2813.0], [32.9, 2813.0], [33.0, 2820.0], [33.1, 2820.0], [33.2, 2820.0], [33.3, 2820.0], [33.4, 2820.0], [33.5, 2823.0], [33.6, 2823.0], [33.7, 2823.0], [33.8, 2823.0], [33.9, 2823.0], [34.0, 2828.0], [34.1, 2828.0], [34.2, 2828.0], [34.3, 2828.0], [34.4, 2828.0], [34.5, 2842.0], [34.6, 2842.0], [34.7, 2842.0], [34.8, 2842.0], [34.9, 2842.0], [35.0, 2851.0], [35.1, 2851.0], [35.2, 2851.0], [35.3, 2851.0], [35.4, 2851.0], [35.5, 2862.0], [35.6, 2862.0], [35.7, 2862.0], [35.8, 2862.0], [35.9, 2862.0], [36.0, 2887.0], [36.1, 2887.0], [36.2, 2887.0], [36.3, 2887.0], [36.4, 2887.0], [36.5, 2926.0], [36.6, 2926.0], [36.7, 2926.0], [36.8, 2926.0], [36.9, 2926.0], [37.0, 2934.0], [37.1, 2934.0], [37.2, 2934.0], [37.3, 2934.0], [37.4, 2934.0], [37.5, 2951.0], [37.6, 2951.0], [37.7, 2951.0], [37.8, 2951.0], [37.9, 2951.0], [38.0, 2976.0], [38.1, 2976.0], [38.2, 2976.0], [38.3, 2976.0], [38.4, 2976.0], [38.5, 2983.0], [38.6, 2983.0], [38.7, 2983.0], [38.8, 2983.0], [38.9, 2983.0], [39.0, 2985.0], [39.1, 2985.0], [39.2, 2985.0], [39.3, 2985.0], [39.4, 2985.0], [39.5, 2996.0], [39.6, 2996.0], [39.7, 2996.0], [39.8, 2996.0], [39.9, 2996.0], [40.0, 3002.0], [40.1, 3002.0], [40.2, 3002.0], [40.3, 3002.0], [40.4, 3002.0], [40.5, 3004.0], [40.6, 3004.0], [40.7, 3004.0], [40.8, 3004.0], [40.9, 3004.0], [41.0, 3010.0], [41.1, 3010.0], [41.2, 3010.0], [41.3, 3010.0], [41.4, 3010.0], [41.5, 3045.0], [41.6, 3045.0], [41.7, 3045.0], [41.8, 3045.0], [41.9, 3045.0], [42.0, 3067.0], [42.1, 3067.0], [42.2, 3067.0], [42.3, 3067.0], [42.4, 3067.0], [42.5, 3067.0], [42.6, 3067.0], [42.7, 3067.0], [42.8, 3067.0], [42.9, 3067.0], [43.0, 3073.0], [43.1, 3073.0], [43.2, 3073.0], [43.3, 3073.0], [43.4, 3073.0], [43.5, 3082.0], [43.6, 3082.0], [43.7, 3082.0], [43.8, 3082.0], [43.9, 3082.0], [44.0, 3087.0], [44.1, 3087.0], [44.2, 3087.0], [44.3, 3087.0], [44.4, 3087.0], [44.5, 3089.0], [44.6, 3089.0], [44.7, 3089.0], [44.8, 3089.0], [44.9, 3089.0], [45.0, 3106.0], [45.1, 3106.0], [45.2, 3106.0], [45.3, 3106.0], [45.4, 3106.0], [45.5, 3107.0], [45.6, 3107.0], [45.7, 3107.0], [45.8, 3107.0], [45.9, 3107.0], [46.0, 3111.0], [46.1, 3111.0], [46.2, 3111.0], [46.3, 3111.0], [46.4, 3111.0], [46.5, 3150.0], [46.6, 3150.0], [46.7, 3150.0], [46.8, 3150.0], [46.9, 3150.0], [47.0, 3179.0], [47.1, 3179.0], [47.2, 3179.0], [47.3, 3179.0], [47.4, 3179.0], [47.5, 3270.0], [47.6, 3270.0], [47.7, 3270.0], [47.8, 3270.0], [47.9, 3270.0], [48.0, 3402.0], [48.1, 3402.0], [48.2, 3402.0], [48.3, 3402.0], [48.4, 3402.0], [48.5, 3402.0], [48.6, 3402.0], [48.7, 3402.0], [48.8, 3402.0], [48.9, 3402.0], [49.0, 3576.0], [49.1, 3576.0], [49.2, 3576.0], [49.3, 3576.0], [49.4, 3576.0], [49.5, 7968.0], [49.6, 7968.0], [49.7, 7968.0], [49.8, 7968.0], [49.9, 7968.0], [50.0, 8020.0], [50.1, 8020.0], [50.2, 8020.0], [50.3, 8020.0], [50.4, 8020.0], [50.5, 8046.0], [50.6, 8046.0], [50.7, 8046.0], [50.8, 8046.0], [50.9, 8046.0], [51.0, 8082.0], [51.1, 8082.0], [51.2, 8082.0], [51.3, 8082.0], [51.4, 8082.0], [51.5, 8096.0], [51.6, 8096.0], [51.7, 8096.0], [51.8, 8096.0], [51.9, 8096.0], [52.0, 8264.0], [52.1, 8264.0], [52.2, 8264.0], [52.3, 8264.0], [52.4, 8264.0], [52.5, 8577.0], [52.6, 8577.0], [52.7, 8577.0], [52.8, 8577.0], [52.9, 8577.0], [53.0, 8587.0], [53.1, 8587.0], [53.2, 8587.0], [53.3, 8587.0], [53.4, 8587.0], [53.5, 8588.0], [53.6, 8588.0], [53.7, 8588.0], [53.8, 8588.0], [53.9, 8588.0], [54.0, 8609.0], [54.1, 8609.0], [54.2, 8609.0], [54.3, 8609.0], [54.4, 8609.0], [54.5, 8615.0], [54.6, 8615.0], [54.7, 8615.0], [54.8, 8615.0], [54.9, 8615.0], [55.0, 8655.0], [55.1, 8655.0], [55.2, 8655.0], [55.3, 8655.0], [55.4, 8655.0], [55.5, 8675.0], [55.6, 8675.0], [55.7, 8675.0], [55.8, 8675.0], [55.9, 8675.0], [56.0, 8711.0], [56.1, 8711.0], [56.2, 8711.0], [56.3, 8711.0], [56.4, 8711.0], [56.5, 8880.0], [56.6, 8880.0], [56.7, 8880.0], [56.8, 8880.0], [56.9, 8880.0], [57.0, 8888.0], [57.1, 8888.0], [57.2, 8888.0], [57.3, 8888.0], [57.4, 8888.0], [57.5, 8927.0], [57.6, 8927.0], [57.7, 8927.0], [57.8, 8927.0], [57.9, 8927.0], [58.0, 8940.0], [58.1, 8940.0], [58.2, 8940.0], [58.3, 8940.0], [58.4, 8940.0], [58.5, 8949.0], [58.6, 8949.0], [58.7, 8949.0], [58.8, 8949.0], [58.9, 8949.0], [59.0, 8958.0], [59.1, 8958.0], [59.2, 8958.0], [59.3, 8958.0], [59.4, 8958.0], [59.5, 9003.0], [59.6, 9003.0], [59.7, 9003.0], [59.8, 9003.0], [59.9, 9003.0], [60.0, 9062.0], [60.1, 9062.0], [60.2, 9062.0], [60.3, 9062.0], [60.4, 9062.0], [60.5, 9134.0], [60.6, 9134.0], [60.7, 9134.0], [60.8, 9134.0], [60.9, 9134.0], [61.0, 9253.0], [61.1, 9253.0], [61.2, 9253.0], [61.3, 9253.0], [61.4, 9253.0], [61.5, 9320.0], [61.6, 9320.0], [61.7, 9320.0], [61.8, 9320.0], [61.9, 9320.0], [62.0, 9339.0], [62.1, 9339.0], [62.2, 9339.0], [62.3, 9339.0], [62.4, 9339.0], [62.5, 9374.0], [62.6, 9374.0], [62.7, 9374.0], [62.8, 9374.0], [62.9, 9374.0], [63.0, 9380.0], [63.1, 9380.0], [63.2, 9380.0], [63.3, 9380.0], [63.4, 9380.0], [63.5, 9383.0], [63.6, 9383.0], [63.7, 9383.0], [63.8, 9383.0], [63.9, 9383.0], [64.0, 9390.0], [64.1, 9390.0], [64.2, 9390.0], [64.3, 9390.0], [64.4, 9390.0], [64.5, 9390.0], [64.6, 9390.0], [64.7, 9390.0], [64.8, 9390.0], [64.9, 9390.0], [65.0, 9395.0], [65.1, 9395.0], [65.2, 9395.0], [65.3, 9395.0], [65.4, 9395.0], [65.5, 9407.0], [65.6, 9407.0], [65.7, 9407.0], [65.8, 9407.0], [65.9, 9407.0], [66.0, 9425.0], [66.1, 9425.0], [66.2, 9425.0], [66.3, 9425.0], [66.4, 9425.0], [66.5, 9437.0], [66.6, 9437.0], [66.7, 9437.0], [66.8, 9437.0], [66.9, 9437.0], [67.0, 9448.0], [67.1, 9448.0], [67.2, 9448.0], [67.3, 9448.0], [67.4, 9448.0], [67.5, 9500.0], [67.6, 9500.0], [67.7, 9500.0], [67.8, 9500.0], [67.9, 9500.0], [68.0, 9522.0], [68.1, 9522.0], [68.2, 9522.0], [68.3, 9522.0], [68.4, 9522.0], [68.5, 9525.0], [68.6, 9525.0], [68.7, 9525.0], [68.8, 9525.0], [68.9, 9525.0], [69.0, 9543.0], [69.1, 9543.0], [69.2, 9543.0], [69.3, 9543.0], [69.4, 9543.0], [69.5, 9544.0], [69.6, 9544.0], [69.7, 9544.0], [69.8, 9544.0], [69.9, 9544.0], [70.0, 9574.0], [70.1, 9574.0], [70.2, 9574.0], [70.3, 9574.0], [70.4, 9574.0], [70.5, 9585.0], [70.6, 9585.0], [70.7, 9585.0], [70.8, 9585.0], [70.9, 9585.0], [71.0, 9586.0], [71.1, 9586.0], [71.2, 9586.0], [71.3, 9586.0], [71.4, 9586.0], [71.5, 9668.0], [71.6, 9668.0], [71.7, 9668.0], [71.8, 9668.0], [71.9, 9668.0], [72.0, 9863.0], [72.1, 9863.0], [72.2, 9863.0], [72.3, 9863.0], [72.4, 9863.0], [72.5, 9894.0], [72.6, 9894.0], [72.7, 9894.0], [72.8, 9894.0], [72.9, 9894.0], [73.0, 9909.0], [73.1, 9909.0], [73.2, 9909.0], [73.3, 9909.0], [73.4, 9909.0], [73.5, 9923.0], [73.6, 9923.0], [73.7, 9923.0], [73.8, 9923.0], [73.9, 9923.0], [74.0, 9940.0], [74.1, 9940.0], [74.2, 9940.0], [74.3, 9940.0], [74.4, 9940.0], [74.5, 9942.0], [74.6, 9942.0], [74.7, 9942.0], [74.8, 9942.0], [74.9, 9942.0], [75.0, 9958.0], [75.1, 9958.0], [75.2, 9958.0], [75.3, 9958.0], [75.4, 9958.0], [75.5, 9966.0], [75.6, 9966.0], [75.7, 9966.0], [75.8, 9966.0], [75.9, 9966.0], [76.0, 9969.0], [76.1, 9969.0], [76.2, 9969.0], [76.3, 9969.0], [76.4, 9969.0], [76.5, 9974.0], [76.6, 9974.0], [76.7, 9974.0], [76.8, 9974.0], [76.9, 9974.0], [77.0, 9989.0], [77.1, 9989.0], [77.2, 9989.0], [77.3, 9989.0], [77.4, 9989.0], [77.5, 9995.0], [77.6, 9995.0], [77.7, 9995.0], [77.8, 9995.0], [77.9, 9995.0], [78.0, 10003.0], [78.1, 10003.0], [78.2, 10003.0], [78.3, 10003.0], [78.4, 10003.0], [78.5, 10017.0], [78.6, 10017.0], [78.7, 10017.0], [78.8, 10017.0], [78.9, 10017.0], [79.0, 10024.0], [79.1, 10024.0], [79.2, 10024.0], [79.3, 10024.0], [79.4, 10024.0], [79.5, 10025.0], [79.6, 10025.0], [79.7, 10025.0], [79.8, 10025.0], [79.9, 10025.0], [80.0, 10033.0], [80.1, 10033.0], [80.2, 10033.0], [80.3, 10033.0], [80.4, 10033.0], [80.5, 10034.0], [80.6, 10034.0], [80.7, 10034.0], [80.8, 10034.0], [80.9, 10034.0], [81.0, 10045.0], [81.1, 10045.0], [81.2, 10045.0], [81.3, 10045.0], [81.4, 10045.0], [81.5, 10055.0], [81.6, 10055.0], [81.7, 10055.0], [81.8, 10055.0], [81.9, 10055.0], [82.0, 10059.0], [82.1, 10059.0], [82.2, 10059.0], [82.3, 10059.0], [82.4, 10059.0], [82.5, 10071.0], [82.6, 10071.0], [82.7, 10071.0], [82.8, 10071.0], [82.9, 10071.0], [83.0, 10074.0], [83.1, 10074.0], [83.2, 10074.0], [83.3, 10074.0], [83.4, 10074.0], [83.5, 10114.0], [83.6, 10114.0], [83.7, 10114.0], [83.8, 10114.0], [83.9, 10114.0], [84.0, 10119.0], [84.1, 10119.0], [84.2, 10119.0], [84.3, 10119.0], [84.4, 10119.0], [84.5, 10120.0], [84.6, 10120.0], [84.7, 10120.0], [84.8, 10120.0], [84.9, 10120.0], [85.0, 10171.0], [85.1, 10171.0], [85.2, 10171.0], [85.3, 10171.0], [85.4, 10171.0], [85.5, 10193.0], [85.6, 10193.0], [85.7, 10193.0], [85.8, 10193.0], [85.9, 10193.0], [86.0, 10334.0], [86.1, 10334.0], [86.2, 10334.0], [86.3, 10334.0], [86.4, 10334.0], [86.5, 10334.0], [86.6, 10334.0], [86.7, 10334.0], [86.8, 10334.0], [86.9, 10334.0], [87.0, 10349.0], [87.1, 10349.0], [87.2, 10349.0], [87.3, 10349.0], [87.4, 10349.0], [87.5, 10384.0], [87.6, 10384.0], [87.7, 10384.0], [87.8, 10384.0], [87.9, 10384.0], [88.0, 10408.0], [88.1, 10408.0], [88.2, 10408.0], [88.3, 10408.0], [88.4, 10408.0], [88.5, 15476.0], [88.6, 15476.0], [88.7, 15476.0], [88.8, 15476.0], [88.9, 15476.0], [89.0, 15480.0], [89.1, 15480.0], [89.2, 15480.0], [89.3, 15480.0], [89.4, 15480.0], [89.5, 15492.0], [89.6, 15492.0], [89.7, 15492.0], [89.8, 15492.0], [89.9, 15492.0], [90.0, 15523.0], [90.1, 15523.0], [90.2, 15523.0], [90.3, 15523.0], [90.4, 15523.0], [90.5, 15527.0], [90.6, 15527.0], [90.7, 15527.0], [90.8, 15527.0], [90.9, 15527.0], [91.0, 15528.0], [91.1, 15528.0], [91.2, 15528.0], [91.3, 15528.0], [91.4, 15528.0], [91.5, 17242.0], [91.6, 17242.0], [91.7, 17242.0], [91.8, 17242.0], [91.9, 17242.0], [92.0, 17305.0], [92.1, 17305.0], [92.2, 17305.0], [92.3, 17305.0], [92.4, 17305.0], [92.5, 17338.0], [92.6, 17338.0], [92.7, 17338.0], [92.8, 17338.0], [92.9, 17338.0], [93.0, 17341.0], [93.1, 17341.0], [93.2, 17341.0], [93.3, 17341.0], [93.4, 17341.0], [93.5, 17357.0], [93.6, 17357.0], [93.7, 17357.0], [93.8, 17357.0], [93.9, 17357.0], [94.0, 17367.0], [94.1, 17367.0], [94.2, 17367.0], [94.3, 17367.0], [94.4, 17367.0], [94.5, 17371.0], [94.6, 17371.0], [94.7, 17371.0], [94.8, 17371.0], [94.9, 17371.0], [95.0, 17374.0], [95.1, 17374.0], [95.2, 17374.0], [95.3, 17374.0], [95.4, 17374.0], [95.5, 17411.0], [95.6, 17411.0], [95.7, 17411.0], [95.8, 17411.0], [95.9, 17411.0], [96.0, 17421.0], [96.1, 17421.0], [96.2, 17421.0], [96.3, 17421.0], [96.4, 17421.0], [96.5, 17426.0], [96.6, 17426.0], [96.7, 17426.0], [96.8, 17426.0], [96.9, 17426.0], [97.0, 17468.0], [97.1, 17468.0], [97.2, 17468.0], [97.3, 17468.0], [97.4, 17468.0], [97.5, 17510.0], [97.6, 17510.0], [97.7, 17510.0], [97.8, 17510.0], [97.9, 17510.0], [98.0, 17524.0], [98.1, 17524.0], [98.2, 17524.0], [98.3, 17524.0], [98.4, 17524.0], [98.5, 17525.0], [98.6, 17525.0], [98.7, 17525.0], [98.8, 17525.0], [98.9, 17525.0], [99.0, 17535.0], [99.1, 17535.0], [99.2, 17535.0], [99.3, 17535.0], [99.4, 17535.0], [99.5, 17653.0], [99.6, 17653.0], [99.7, 17653.0], [99.8, 17653.0], [99.9, 17653.0]], "isOverall": false, "label": "acessar bing", "isController": false}, {"data": [[0.0, 252.0], [0.1, 252.0], [0.2, 252.0], [0.3, 252.0], [0.4, 252.0], [0.5, 358.0], [0.6, 358.0], [0.7, 358.0], [0.8, 358.0], [0.9, 358.0], [1.0, 364.0], [1.1, 364.0], [1.2, 364.0], [1.3, 364.0], [1.4, 364.0], [1.5, 524.0], [1.6, 524.0], [1.7, 524.0], [1.8, 524.0], [1.9, 524.0], [2.0, 531.0], [2.1, 531.0], [2.2, 531.0], [2.3, 531.0], [2.4, 531.0], [2.5, 563.0], [2.6, 563.0], [2.7, 563.0], [2.8, 563.0], [2.9, 563.0], [3.0, 569.0], [3.1, 569.0], [3.2, 569.0], [3.3, 569.0], [3.4, 569.0], [3.5, 576.0], [3.6, 576.0], [3.7, 576.0], [3.8, 576.0], [3.9, 576.0], [4.0, 578.0], [4.1, 578.0], [4.2, 578.0], [4.3, 578.0], [4.4, 578.0], [4.5, 591.0], [4.6, 591.0], [4.7, 591.0], [4.8, 591.0], [4.9, 591.0], [5.0, 598.0], [5.1, 598.0], [5.2, 598.0], [5.3, 598.0], [5.4, 598.0], [5.5, 604.0], [5.6, 604.0], [5.7, 604.0], [5.8, 604.0], [5.9, 604.0], [6.0, 624.0], [6.1, 624.0], [6.2, 624.0], [6.3, 624.0], [6.4, 624.0], [6.5, 640.0], [6.6, 640.0], [6.7, 640.0], [6.8, 640.0], [6.9, 640.0], [7.0, 661.0], [7.1, 661.0], [7.2, 661.0], [7.3, 661.0], [7.4, 661.0], [7.5, 666.0], [7.6, 666.0], [7.7, 666.0], [7.8, 666.0], [7.9, 666.0], [8.0, 668.0], [8.1, 668.0], [8.2, 668.0], [8.3, 668.0], [8.4, 668.0], [8.5, 675.0], [8.6, 675.0], [8.7, 675.0], [8.8, 675.0], [8.9, 675.0], [9.0, 675.0], [9.1, 675.0], [9.2, 675.0], [9.3, 675.0], [9.4, 675.0], [9.5, 679.0], [9.6, 679.0], [9.7, 679.0], [9.8, 679.0], [9.9, 679.0], [10.0, 679.0], [10.1, 679.0], [10.2, 679.0], [10.3, 679.0], [10.4, 679.0], [10.5, 682.0], [10.6, 682.0], [10.7, 682.0], [10.8, 682.0], [10.9, 682.0], [11.0, 688.0], [11.1, 688.0], [11.2, 688.0], [11.3, 688.0], [11.4, 688.0], [11.5, 690.0], [11.6, 690.0], [11.7, 690.0], [11.8, 690.0], [11.9, 690.0], [12.0, 690.0], [12.1, 690.0], [12.2, 690.0], [12.3, 690.0], [12.4, 690.0], [12.5, 705.0], [12.6, 705.0], [12.7, 705.0], [12.8, 705.0], [12.9, 705.0], [13.0, 712.0], [13.1, 712.0], [13.2, 712.0], [13.3, 712.0], [13.4, 712.0], [13.5, 714.0], [13.6, 714.0], [13.7, 714.0], [13.8, 714.0], [13.9, 714.0], [14.0, 716.0], [14.1, 716.0], [14.2, 716.0], [14.3, 716.0], [14.4, 716.0], [14.5, 720.0], [14.6, 720.0], [14.7, 720.0], [14.8, 720.0], [14.9, 720.0], [15.0, 721.0], [15.1, 721.0], [15.2, 721.0], [15.3, 721.0], [15.4, 721.0], [15.5, 724.0], [15.6, 724.0], [15.7, 724.0], [15.8, 724.0], [15.9, 724.0], [16.0, 730.0], [16.1, 730.0], [16.2, 730.0], [16.3, 730.0], [16.4, 730.0], [16.5, 730.0], [16.6, 730.0], [16.7, 730.0], [16.8, 730.0], [16.9, 730.0], [17.0, 735.0], [17.1, 735.0], [17.2, 735.0], [17.3, 735.0], [17.4, 735.0], [17.5, 736.0], [17.6, 736.0], [17.7, 736.0], [17.8, 736.0], [17.9, 736.0], [18.0, 736.0], [18.1, 736.0], [18.2, 736.0], [18.3, 736.0], [18.4, 736.0], [18.5, 743.0], [18.6, 743.0], [18.7, 743.0], [18.8, 743.0], [18.9, 743.0], [19.0, 744.0], [19.1, 744.0], [19.2, 744.0], [19.3, 744.0], [19.4, 744.0], [19.5, 747.0], [19.6, 747.0], [19.7, 747.0], [19.8, 747.0], [19.9, 747.0], [20.0, 747.0], [20.1, 747.0], [20.2, 747.0], [20.3, 747.0], [20.4, 747.0], [20.5, 754.0], [20.6, 754.0], [20.7, 754.0], [20.8, 754.0], [20.9, 754.0], [21.0, 759.0], [21.1, 759.0], [21.2, 759.0], [21.3, 759.0], [21.4, 759.0], [21.5, 761.0], [21.6, 761.0], [21.7, 761.0], [21.8, 761.0], [21.9, 761.0], [22.0, 770.0], [22.1, 770.0], [22.2, 770.0], [22.3, 770.0], [22.4, 770.0], [22.5, 777.0], [22.6, 777.0], [22.7, 777.0], [22.8, 777.0], [22.9, 777.0], [23.0, 787.0], [23.1, 787.0], [23.2, 787.0], [23.3, 787.0], [23.4, 787.0], [23.5, 789.0], [23.6, 789.0], [23.7, 789.0], [23.8, 789.0], [23.9, 789.0], [24.0, 793.0], [24.1, 793.0], [24.2, 793.0], [24.3, 793.0], [24.4, 793.0], [24.5, 794.0], [24.6, 794.0], [24.7, 794.0], [24.8, 794.0], [24.9, 794.0], [25.0, 795.0], [25.1, 795.0], [25.2, 795.0], [25.3, 795.0], [25.4, 795.0], [25.5, 799.0], [25.6, 799.0], [25.7, 799.0], [25.8, 799.0], [25.9, 799.0], [26.0, 799.0], [26.1, 799.0], [26.2, 799.0], [26.3, 799.0], [26.4, 799.0], [26.5, 824.0], [26.6, 824.0], [26.7, 824.0], [26.8, 824.0], [26.9, 824.0], [27.0, 837.0], [27.1, 837.0], [27.2, 837.0], [27.3, 837.0], [27.4, 837.0], [27.5, 837.0], [27.6, 837.0], [27.7, 837.0], [27.8, 837.0], [27.9, 837.0], [28.0, 837.0], [28.1, 837.0], [28.2, 837.0], [28.3, 837.0], [28.4, 837.0], [28.5, 851.0], [28.6, 851.0], [28.7, 851.0], [28.8, 851.0], [28.9, 851.0], [29.0, 939.0], [29.1, 939.0], [29.2, 939.0], [29.3, 939.0], [29.4, 939.0], [29.5, 1042.0], [29.6, 1042.0], [29.7, 1042.0], [29.8, 1042.0], [29.9, 1042.0], [30.0, 1052.0], [30.1, 1052.0], [30.2, 1052.0], [30.3, 1052.0], [30.4, 1052.0], [30.5, 1065.0], [30.6, 1065.0], [30.7, 1065.0], [30.8, 1065.0], [30.9, 1065.0], [31.0, 1071.0], [31.1, 1071.0], [31.2, 1071.0], [31.3, 1071.0], [31.4, 1071.0], [31.5, 1072.0], [31.6, 1072.0], [31.7, 1072.0], [31.8, 1072.0], [31.9, 1072.0], [32.0, 1073.0], [32.1, 1073.0], [32.2, 1073.0], [32.3, 1073.0], [32.4, 1073.0], [32.5, 1074.0], [32.6, 1074.0], [32.7, 1074.0], [32.8, 1074.0], [32.9, 1074.0], [33.0, 1074.0], [33.1, 1074.0], [33.2, 1074.0], [33.3, 1074.0], [33.4, 1074.0], [33.5, 1075.0], [33.6, 1075.0], [33.7, 1075.0], [33.8, 1075.0], [33.9, 1075.0], [34.0, 1076.0], [34.1, 1076.0], [34.2, 1076.0], [34.3, 1076.0], [34.4, 1076.0], [34.5, 1078.0], [34.6, 1078.0], [34.7, 1078.0], [34.8, 1078.0], [34.9, 1078.0], [35.0, 1079.0], [35.1, 1079.0], [35.2, 1079.0], [35.3, 1079.0], [35.4, 1079.0], [35.5, 1079.0], [35.6, 1079.0], [35.7, 1079.0], [35.8, 1079.0], [35.9, 1079.0], [36.0, 1083.0], [36.1, 1083.0], [36.2, 1083.0], [36.3, 1083.0], [36.4, 1083.0], [36.5, 1085.0], [36.6, 1085.0], [36.7, 1085.0], [36.8, 1085.0], [36.9, 1085.0], [37.0, 1088.0], [37.1, 1088.0], [37.2, 1088.0], [37.3, 1088.0], [37.4, 1088.0], [37.5, 1088.0], [37.6, 1088.0], [37.7, 1088.0], [37.8, 1088.0], [37.9, 1088.0], [38.0, 1089.0], [38.1, 1089.0], [38.2, 1089.0], [38.3, 1089.0], [38.4, 1089.0], [38.5, 1090.0], [38.6, 1090.0], [38.7, 1090.0], [38.8, 1090.0], [38.9, 1090.0], [39.0, 1091.0], [39.1, 1091.0], [39.2, 1091.0], [39.3, 1091.0], [39.4, 1091.0], [39.5, 1092.0], [39.6, 1092.0], [39.7, 1092.0], [39.8, 1092.0], [39.9, 1092.0], [40.0, 1111.0], [40.1, 1111.0], [40.2, 1111.0], [40.3, 1111.0], [40.4, 1111.0], [40.5, 1112.0], [40.6, 1112.0], [40.7, 1112.0], [40.8, 1112.0], [40.9, 1112.0], [41.0, 1113.0], [41.1, 1113.0], [41.2, 1113.0], [41.3, 1113.0], [41.4, 1113.0], [41.5, 1115.0], [41.6, 1115.0], [41.7, 1115.0], [41.8, 1115.0], [41.9, 1115.0], [42.0, 1117.0], [42.1, 1117.0], [42.2, 1117.0], [42.3, 1117.0], [42.4, 1117.0], [42.5, 1119.0], [42.6, 1119.0], [42.7, 1119.0], [42.8, 1119.0], [42.9, 1119.0], [43.0, 1121.0], [43.1, 1121.0], [43.2, 1121.0], [43.3, 1121.0], [43.4, 1121.0], [43.5, 1125.0], [43.6, 1125.0], [43.7, 1125.0], [43.8, 1125.0], [43.9, 1125.0], [44.0, 1126.0], [44.1, 1126.0], [44.2, 1126.0], [44.3, 1126.0], [44.4, 1126.0], [44.5, 1128.0], [44.6, 1128.0], [44.7, 1128.0], [44.8, 1128.0], [44.9, 1128.0], [45.0, 1128.0], [45.1, 1128.0], [45.2, 1128.0], [45.3, 1128.0], [45.4, 1128.0], [45.5, 1131.0], [45.6, 1131.0], [45.7, 1131.0], [45.8, 1131.0], [45.9, 1131.0], [46.0, 1132.0], [46.1, 1132.0], [46.2, 1132.0], [46.3, 1132.0], [46.4, 1132.0], [46.5, 1132.0], [46.6, 1132.0], [46.7, 1132.0], [46.8, 1132.0], [46.9, 1132.0], [47.0, 1134.0], [47.1, 1134.0], [47.2, 1134.0], [47.3, 1134.0], [47.4, 1134.0], [47.5, 1155.0], [47.6, 1155.0], [47.7, 1155.0], [47.8, 1155.0], [47.9, 1155.0], [48.0, 1162.0], [48.1, 1162.0], [48.2, 1162.0], [48.3, 1162.0], [48.4, 1162.0], [48.5, 1168.0], [48.6, 1168.0], [48.7, 1168.0], [48.8, 1168.0], [48.9, 1168.0], [49.0, 1168.0], [49.1, 1168.0], [49.2, 1168.0], [49.3, 1168.0], [49.4, 1168.0], [49.5, 1171.0], [49.6, 1171.0], [49.7, 1171.0], [49.8, 1171.0], [49.9, 1171.0], [50.0, 1174.0], [50.1, 1174.0], [50.2, 1174.0], [50.3, 1174.0], [50.4, 1174.0], [50.5, 1176.0], [50.6, 1176.0], [50.7, 1176.0], [50.8, 1176.0], [50.9, 1176.0], [51.0, 1179.0], [51.1, 1179.0], [51.2, 1179.0], [51.3, 1179.0], [51.4, 1179.0], [51.5, 1179.0], [51.6, 1179.0], [51.7, 1179.0], [51.8, 1179.0], [51.9, 1179.0], [52.0, 1193.0], [52.1, 1193.0], [52.2, 1193.0], [52.3, 1193.0], [52.4, 1193.0], [52.5, 1196.0], [52.6, 1196.0], [52.7, 1196.0], [52.8, 1196.0], [52.9, 1196.0], [53.0, 1218.0], [53.1, 1218.0], [53.2, 1218.0], [53.3, 1218.0], [53.4, 1218.0], [53.5, 1218.0], [53.6, 1218.0], [53.7, 1218.0], [53.8, 1218.0], [53.9, 1218.0], [54.0, 1226.0], [54.1, 1226.0], [54.2, 1226.0], [54.3, 1226.0], [54.4, 1226.0], [54.5, 1233.0], [54.6, 1233.0], [54.7, 1233.0], [54.8, 1233.0], [54.9, 1233.0], [55.0, 1246.0], [55.1, 1246.0], [55.2, 1246.0], [55.3, 1246.0], [55.4, 1246.0], [55.5, 1255.0], [55.6, 1255.0], [55.7, 1255.0], [55.8, 1255.0], [55.9, 1255.0], [56.0, 1295.0], [56.1, 1295.0], [56.2, 1295.0], [56.3, 1295.0], [56.4, 1295.0], [56.5, 1408.0], [56.6, 1408.0], [56.7, 1408.0], [56.8, 1408.0], [56.9, 1408.0], [57.0, 1434.0], [57.1, 1434.0], [57.2, 1434.0], [57.3, 1434.0], [57.4, 1434.0], [57.5, 1436.0], [57.6, 1436.0], [57.7, 1436.0], [57.8, 1436.0], [57.9, 1436.0], [58.0, 1448.0], [58.1, 1448.0], [58.2, 1448.0], [58.3, 1448.0], [58.4, 1448.0], [58.5, 1504.0], [58.6, 1504.0], [58.7, 1504.0], [58.8, 1504.0], [58.9, 1504.0], [59.0, 1557.0], [59.1, 1557.0], [59.2, 1557.0], [59.3, 1557.0], [59.4, 1557.0], [59.5, 1567.0], [59.6, 1567.0], [59.7, 1567.0], [59.8, 1567.0], [59.9, 1567.0], [60.0, 1661.0], [60.1, 1661.0], [60.2, 1661.0], [60.3, 1661.0], [60.4, 1661.0], [60.5, 1666.0], [60.6, 1666.0], [60.7, 1666.0], [60.8, 1666.0], [60.9, 1666.0], [61.0, 1688.0], [61.1, 1688.0], [61.2, 1688.0], [61.3, 1688.0], [61.4, 1688.0], [61.5, 1692.0], [61.6, 1692.0], [61.7, 1692.0], [61.8, 1692.0], [61.9, 1692.0], [62.0, 1698.0], [62.1, 1698.0], [62.2, 1698.0], [62.3, 1698.0], [62.4, 1698.0], [62.5, 1701.0], [62.6, 1701.0], [62.7, 1701.0], [62.8, 1701.0], [62.9, 1701.0], [63.0, 1704.0], [63.1, 1704.0], [63.2, 1704.0], [63.3, 1704.0], [63.4, 1704.0], [63.5, 1727.0], [63.6, 1727.0], [63.7, 1727.0], [63.8, 1727.0], [63.9, 1727.0], [64.0, 1730.0], [64.1, 1730.0], [64.2, 1730.0], [64.3, 1730.0], [64.4, 1730.0], [64.5, 1751.0], [64.6, 1751.0], [64.7, 1751.0], [64.8, 1751.0], [64.9, 1751.0], [65.0, 1752.0], [65.1, 1752.0], [65.2, 1752.0], [65.3, 1752.0], [65.4, 1752.0], [65.5, 1755.0], [65.6, 1755.0], [65.7, 1755.0], [65.8, 1755.0], [65.9, 1755.0], [66.0, 1758.0], [66.1, 1758.0], [66.2, 1758.0], [66.3, 1758.0], [66.4, 1758.0], [66.5, 1765.0], [66.6, 1765.0], [66.7, 1765.0], [66.8, 1765.0], [66.9, 1765.0], [67.0, 1774.0], [67.1, 1774.0], [67.2, 1774.0], [67.3, 1774.0], [67.4, 1774.0], [67.5, 1799.0], [67.6, 1799.0], [67.7, 1799.0], [67.8, 1799.0], [67.9, 1799.0], [68.0, 1800.0], [68.1, 1800.0], [68.2, 1800.0], [68.3, 1800.0], [68.4, 1800.0], [68.5, 1804.0], [68.6, 1804.0], [68.7, 1804.0], [68.8, 1804.0], [68.9, 1804.0], [69.0, 1828.0], [69.1, 1828.0], [69.2, 1828.0], [69.3, 1828.0], [69.4, 1828.0], [69.5, 1842.0], [69.6, 1842.0], [69.7, 1842.0], [69.8, 1842.0], [69.9, 1842.0], [70.0, 1871.0], [70.1, 1871.0], [70.2, 1871.0], [70.3, 1871.0], [70.4, 1871.0], [70.5, 1884.0], [70.6, 1884.0], [70.7, 1884.0], [70.8, 1884.0], [70.9, 1884.0], [71.0, 1887.0], [71.1, 1887.0], [71.2, 1887.0], [71.3, 1887.0], [71.4, 1887.0], [71.5, 1888.0], [71.6, 1888.0], [71.7, 1888.0], [71.8, 1888.0], [71.9, 1888.0], [72.0, 1890.0], [72.1, 1890.0], [72.2, 1890.0], [72.3, 1890.0], [72.4, 1890.0], [72.5, 1890.0], [72.6, 1890.0], [72.7, 1890.0], [72.8, 1890.0], [72.9, 1890.0], [73.0, 1893.0], [73.1, 1893.0], [73.2, 1893.0], [73.3, 1893.0], [73.4, 1893.0], [73.5, 1894.0], [73.6, 1894.0], [73.7, 1894.0], [73.8, 1894.0], [73.9, 1894.0], [74.0, 1913.0], [74.1, 1913.0], [74.2, 1913.0], [74.3, 1913.0], [74.4, 1913.0], [74.5, 1914.0], [74.6, 1914.0], [74.7, 1914.0], [74.8, 1914.0], [74.9, 1914.0], [75.0, 1934.0], [75.1, 1934.0], [75.2, 1934.0], [75.3, 1934.0], [75.4, 1934.0], [75.5, 1961.0], [75.6, 1961.0], [75.7, 1961.0], [75.8, 1961.0], [75.9, 1961.0], [76.0, 1984.0], [76.1, 1984.0], [76.2, 1984.0], [76.3, 1984.0], [76.4, 1984.0], [76.5, 1986.0], [76.6, 1986.0], [76.7, 1986.0], [76.8, 1986.0], [76.9, 1986.0], [77.0, 1995.0], [77.1, 1995.0], [77.2, 1995.0], [77.3, 1995.0], [77.4, 1995.0], [77.5, 2080.0], [77.6, 2080.0], [77.7, 2080.0], [77.8, 2080.0], [77.9, 2080.0], [78.0, 2086.0], [78.1, 2086.0], [78.2, 2086.0], [78.3, 2086.0], [78.4, 2086.0], [78.5, 2128.0], [78.6, 2128.0], [78.7, 2128.0], [78.8, 2128.0], [78.9, 2128.0], [79.0, 2134.0], [79.1, 2134.0], [79.2, 2134.0], [79.3, 2134.0], [79.4, 2134.0], [79.5, 2186.0], [79.6, 2186.0], [79.7, 2186.0], [79.8, 2186.0], [79.9, 2186.0], [80.0, 2210.0], [80.1, 2210.0], [80.2, 2210.0], [80.3, 2210.0], [80.4, 2210.0], [80.5, 2217.0], [80.6, 2217.0], [80.7, 2217.0], [80.8, 2217.0], [80.9, 2217.0], [81.0, 2224.0], [81.1, 2224.0], [81.2, 2224.0], [81.3, 2224.0], [81.4, 2224.0], [81.5, 2228.0], [81.6, 2228.0], [81.7, 2228.0], [81.8, 2228.0], [81.9, 2228.0], [82.0, 2244.0], [82.1, 2244.0], [82.2, 2244.0], [82.3, 2244.0], [82.4, 2244.0], [82.5, 2263.0], [82.6, 2263.0], [82.7, 2263.0], [82.8, 2263.0], [82.9, 2263.0], [83.0, 2268.0], [83.1, 2268.0], [83.2, 2268.0], [83.3, 2268.0], [83.4, 2268.0], [83.5, 2271.0], [83.6, 2271.0], [83.7, 2271.0], [83.8, 2271.0], [83.9, 2271.0], [84.0, 2276.0], [84.1, 2276.0], [84.2, 2276.0], [84.3, 2276.0], [84.4, 2276.0], [84.5, 2283.0], [84.6, 2283.0], [84.7, 2283.0], [84.8, 2283.0], [84.9, 2283.0], [85.0, 2287.0], [85.1, 2287.0], [85.2, 2287.0], [85.3, 2287.0], [85.4, 2287.0], [85.5, 2288.0], [85.6, 2288.0], [85.7, 2288.0], [85.8, 2288.0], [85.9, 2288.0], [86.0, 2294.0], [86.1, 2294.0], [86.2, 2294.0], [86.3, 2294.0], [86.4, 2294.0], [86.5, 2305.0], [86.6, 2305.0], [86.7, 2305.0], [86.8, 2305.0], [86.9, 2305.0], [87.0, 2319.0], [87.1, 2319.0], [87.2, 2319.0], [87.3, 2319.0], [87.4, 2319.0], [87.5, 2325.0], [87.6, 2325.0], [87.7, 2325.0], [87.8, 2325.0], [87.9, 2325.0], [88.0, 2328.0], [88.1, 2328.0], [88.2, 2328.0], [88.3, 2328.0], [88.4, 2328.0], [88.5, 2346.0], [88.6, 2346.0], [88.7, 2346.0], [88.8, 2346.0], [88.9, 2346.0], [89.0, 2361.0], [89.1, 2361.0], [89.2, 2361.0], [89.3, 2361.0], [89.4, 2361.0], [89.5, 2362.0], [89.6, 2362.0], [89.7, 2362.0], [89.8, 2362.0], [89.9, 2362.0], [90.0, 2384.0], [90.1, 2384.0], [90.2, 2384.0], [90.3, 2384.0], [90.4, 2384.0], [90.5, 2444.0], [90.6, 2444.0], [90.7, 2444.0], [90.8, 2444.0], [90.9, 2444.0], [91.0, 2450.0], [91.1, 2450.0], [91.2, 2450.0], [91.3, 2450.0], [91.4, 2450.0], [91.5, 2470.0], [91.6, 2470.0], [91.7, 2470.0], [91.8, 2470.0], [91.9, 2470.0], [92.0, 2600.0], [92.1, 2600.0], [92.2, 2600.0], [92.3, 2600.0], [92.4, 2600.0], [92.5, 2621.0], [92.6, 2621.0], [92.7, 2621.0], [92.8, 2621.0], [92.9, 2621.0], [93.0, 2685.0], [93.1, 2685.0], [93.2, 2685.0], [93.3, 2685.0], [93.4, 2685.0], [93.5, 2739.0], [93.6, 2739.0], [93.7, 2739.0], [93.8, 2739.0], [93.9, 2739.0], [94.0, 2782.0], [94.1, 2782.0], [94.2, 2782.0], [94.3, 2782.0], [94.4, 2782.0], [94.5, 2792.0], [94.6, 2792.0], [94.7, 2792.0], [94.8, 2792.0], [94.9, 2792.0], [95.0, 2797.0], [95.1, 2797.0], [95.2, 2797.0], [95.3, 2797.0], [95.4, 2797.0], [95.5, 2802.0], [95.6, 2802.0], [95.7, 2802.0], [95.8, 2802.0], [95.9, 2802.0], [96.0, 7301.0], [96.1, 7301.0], [96.2, 7301.0], [96.3, 7301.0], [96.4, 7301.0], [96.5, 7301.0], [96.6, 7301.0], [96.7, 7301.0], [96.8, 7301.0], [96.9, 7301.0], [97.0, 15132.0], [97.1, 15132.0], [97.2, 15132.0], [97.3, 15132.0], [97.4, 15132.0], [97.5, 15140.0], [97.6, 15140.0], [97.7, 15140.0], [97.8, 15140.0], [97.9, 15140.0], [98.0, 15148.0], [98.1, 15148.0], [98.2, 15148.0], [98.3, 15148.0], [98.4, 15148.0], [98.5, 15160.0], [98.6, 15160.0], [98.7, 15160.0], [98.8, 15160.0], [98.9, 15160.0], [99.0, 15164.0], [99.1, 15164.0], [99.2, 15164.0], [99.3, 15164.0], [99.4, 15164.0], [99.5, 15167.0], [99.6, 15167.0], [99.7, 15167.0], [99.8, 15167.0], [99.9, 15167.0]], "isOverall": false, "label": "acessar bing-0", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 200.0, "maxY": 35.0, "series": [{"data": [[600.0, 35.0], [2500.0, 1.0], [2600.0, 1.0], [700.0, 27.0], [800.0, 32.0], [900.0, 23.0], [1000.0, 20.0], [1100.0, 7.0], [300.0, 11.0], [1200.0, 12.0], [1300.0, 10.0], [1400.0, 2.0], [400.0, 5.0], [1800.0, 1.0], [500.0, 13.0]], "isOverall": false, "label": "acessar google", "isController": false}, {"data": [[600.0, 1.0], [700.0, 1.0], [800.0, 1.0], [900.0, 1.0], [15400.0, 1.0], [15500.0, 5.0], [15600.0, 11.0], [1000.0, 1.0], [1300.0, 1.0], [1400.0, 7.0], [1500.0, 7.0], [1600.0, 12.0], [1700.0, 14.0], [1800.0, 22.0], [1900.0, 10.0], [2000.0, 8.0], [2100.0, 8.0], [2200.0, 2.0], [2800.0, 1.0], [300.0, 6.0], [7400.0, 22.0], [7300.0, 2.0], [7500.0, 19.0], [7600.0, 15.0], [7700.0, 16.0], [7800.0, 2.0], [500.0, 4.0]], "isOverall": false, "label": "acessar bing-1", "isController": false}, {"data": [[1100.0, 1.0], [1300.0, 1.0], [1500.0, 1.0], [1600.0, 2.0], [1700.0, 1.0], [1800.0, 2.0], [2000.0, 1.0], [2100.0, 4.0], [2200.0, 2.0], [2300.0, 6.0], [2400.0, 8.0], [2500.0, 12.0], [2600.0, 15.0], [2700.0, 7.0], [2800.0, 10.0], [2900.0, 7.0], [3000.0, 10.0], [3100.0, 5.0], [3200.0, 1.0], [3400.0, 2.0], [3500.0, 1.0], [7900.0, 1.0], [8000.0, 4.0], [8500.0, 3.0], [8700.0, 1.0], [8200.0, 1.0], [8600.0, 4.0], [8900.0, 4.0], [9000.0, 2.0], [8800.0, 2.0], [9200.0, 1.0], [9100.0, 1.0], [9300.0, 8.0], [9400.0, 4.0], [9500.0, 8.0], [9600.0, 1.0], [9900.0, 10.0], [10000.0, 11.0], [9800.0, 2.0], [10100.0, 5.0], [10300.0, 4.0], [10400.0, 1.0], [15400.0, 3.0], [15500.0, 3.0], [17300.0, 7.0], [17400.0, 4.0], [17200.0, 1.0], [17500.0, 4.0], [17600.0, 1.0]], "isOverall": false, "label": "acessar bing", "isController": false}, {"data": [[600.0, 14.0], [700.0, 28.0], [800.0, 5.0], [900.0, 1.0], [15100.0, 6.0], [1000.0, 21.0], [1100.0, 26.0], [1200.0, 7.0], [1400.0, 4.0], [1500.0, 3.0], [1600.0, 5.0], [1700.0, 11.0], [1800.0, 12.0], [1900.0, 7.0], [2000.0, 2.0], [2100.0, 3.0], [2200.0, 13.0], [2300.0, 8.0], [2400.0, 3.0], [2600.0, 3.0], [2800.0, 1.0], [2700.0, 4.0], [200.0, 1.0], [300.0, 2.0], [7300.0, 2.0], [500.0, 8.0]], "isOverall": false, "label": "acessar bing-0", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 17600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 25.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 461.0, "series": [{"data": [[0.0, 25.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 314.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 461.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 125.51875000000027, "minX": 1.58622948E12, "maxY": 125.51875000000027, "series": [{"data": [[1.58622948E12, 125.51875000000027]], "isOverall": false, "label": "Grupo de Usu\u00E1rios", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58622948E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 334.0, "minX": 1.0, "maxY": 17535.0, "series": [{"data": [[192.0, 700.6], [193.0, 771.25], [198.0, 697.0], [196.0, 2599.5], [200.0, 855.2727272727273]], "isOverall": false, "label": "acessar google", "isController": false}, {"data": [[199.6, 865.585]], "isOverall": false, "label": "acessar google-Aggregated", "isController": false}, {"data": [[2.0, 15679.0], [3.0, 15672.0], [4.0, 15652.0], [5.0, 15652.0], [6.0, 15651.0], [7.0, 15640.0], [11.0, 15643.25], [12.0, 15550.0], [15.0, 15531.0], [16.0, 15525.0], [17.0, 15413.0], [18.0, 342.0], [19.0, 346.0], [22.0, 360.3333333333333], [23.0, 334.0], [25.0, 7757.0], [27.0, 7762.0], [28.0, 7720.0], [29.0, 7830.0], [30.0, 7770.0], [33.0, 7778.0], [35.0, 7750.0], [34.0, 7748.5], [37.0, 1832.0], [36.0, 7755.0], [39.0, 7715.0], [38.0, 7759.0], [41.0, 7710.0], [40.0, 7733.0], [42.0, 7718.0], [44.0, 4726.0], [47.0, 7611.0], [46.0, 7678.0], [49.0, 7585.0], [51.0, 7551.0], [50.0, 7595.0], [55.0, 7391.0], [54.0, 7550.0], [57.0, 7551.0], [56.0, 7385.0], [58.0, 7432.0], [63.0, 7474.0], [67.0, 7634.0], [66.0, 7637.0], [65.0, 7641.0], [64.0, 7550.0], [71.0, 7622.333333333333], [68.0, 7631.0], [75.0, 7583.0], [74.0, 7608.0], [72.0, 7613.0], [79.0, 7550.5], [77.0, 7569.0], [76.0, 7577.0], [83.0, 7435.0], [82.0, 7439.0], [81.0, 7442.0], [80.0, 7612.0], [87.0, 7505.0], [86.0, 7518.0], [85.0, 7540.0], [84.0, 7558.0], [91.0, 7444.0], [90.0, 7457.0], [89.0, 7417.5], [95.0, 7478.0], [94.0, 7489.0], [93.0, 7457.0], [92.0, 7477.0], [98.0, 7466.5], [96.0, 7443.0], [102.0, 2805.0], [101.0, 7462.0], [100.0, 7465.0], [107.0, 2236.0], [105.0, 2209.5], [111.0, 2013.0], [110.0, 2071.5], [108.0, 2138.6666666666665], [115.0, 2146.5], [114.0, 1939.0], [112.0, 2095.0], [119.0, 2096.0], [118.0, 2124.0], [117.0, 1995.0], [116.0, 2000.0], [123.0, 1955.0], [122.0, 1961.0], [121.0, 2093.5], [127.0, 1933.0], [126.0, 1857.0], [125.0, 1943.0], [124.0, 1863.0], [135.0, 1806.0], [134.0, 1888.0], [133.0, 1885.0], [132.0, 1909.0], [131.0, 1910.0], [130.0, 1914.0], [129.0, 1895.0], [128.0, 1931.0], [143.0, 1821.0], [142.0, 1792.0], [141.0, 1830.0], [140.0, 1833.0], [139.0, 1835.0], [138.0, 1860.0], [137.0, 1863.0], [136.0, 2019.0], [151.0, 1844.0], [150.0, 1890.0], [149.0, 1852.0], [148.0, 1750.0], [147.0, 1754.0], [146.0, 1734.0], [145.0, 1785.0], [144.0, 1879.0], [159.0, 1814.0], [158.0, 1813.0], [157.0, 1813.0], [156.0, 1748.0], [155.0, 1817.0], [154.0, 1796.6666666666667], [167.0, 1748.0], [166.0, 1658.0], [165.0, 1763.0], [164.0, 1764.0], [163.0, 1688.0], [162.0, 1767.5], [160.0, 1692.0], [174.0, 1575.0], [173.0, 1684.0], [172.0, 1621.0], [171.0, 1680.0], [170.0, 1668.0], [169.0, 1665.0], [182.0, 1445.0], [181.0, 1546.0], [180.0, 1461.0], [179.0, 1561.0], [178.0, 1570.0], [177.0, 1624.0], [176.0, 1623.0], [191.0, 1447.0], [190.0, 1482.0], [189.0, 1405.0], [187.0, 1495.0], [186.0, 1499.0], [185.0, 1526.0], [184.0, 1550.0], [199.0, 538.0], [198.0, 557.0], [196.0, 705.0], [194.0, 816.0], [193.0, 926.0], [192.0, 1029.0], [200.0, 507.0], [1.0, 15680.0]], "isOverall": false, "label": "acessar bing-1", "isController": false}, {"data": [[100.8250000000001, 5090.275000000001]], "isOverall": false, "label": "acessar bing-1-Aggregated", "isController": false}, {"data": [[2.0, 17367.0], [3.0, 17338.0], [4.0, 17357.0], [5.0, 17524.0], [6.0, 17535.0], [7.0, 17468.0], [11.0, 17456.0], [12.0, 17242.0], [15.0, 17406.0], [16.0, 17510.0], [17.0, 17374.0], [18.0, 15492.0], [19.0, 15480.0], [22.0, 15526.0], [23.0, 15476.0], [25.0, 10097.0], [27.0, 10116.5], [28.0, 10171.0], [29.0, 9958.0], [30.0, 10059.0], [33.0, 10007.0], [35.0, 10055.0], [34.0, 10098.0], [37.0, 9134.0], [36.0, 10024.0], [39.0, 10034.0], [38.0, 9969.0], [41.0, 9974.0], [40.0, 10017.0], [42.0, 9942.0], [44.0, 9485.5], [47.0, 10408.0], [46.0, 9944.5], [49.0, 10162.0], [51.0, 10334.0], [50.0, 10334.0], [55.0, 9668.0], [54.0, 10035.333333333334], [57.0, 9253.0], [56.0, 10071.0], [58.0, 10033.0], [63.0, 9658.0], [67.0, 9390.0], [66.0, 9390.0], [65.0, 9407.0], [64.0, 9995.0], [71.0, 9454.333333333334], [68.0, 9522.0], [75.0, 9383.0], [74.0, 9534.5], [72.0, 9374.0], [79.0, 9442.5], [77.0, 9320.0], [76.0, 9380.0], [83.0, 9003.0], [82.0, 8888.0], [81.0, 8880.0], [80.0, 9339.0], [87.0, 8940.0], [86.0, 8927.0], [85.0, 8655.0], [84.0, 8675.0], [91.0, 8949.0], [90.0, 8082.0], [89.0, 8527.0], [95.0, 8609.0], [94.0, 8615.0], [93.0, 8020.0], [92.0, 8046.0], [98.0, 8426.0], [96.0, 7968.0], [102.0, 3576.0], [101.0, 8582.0], [100.0, 8711.0], [107.0, 2828.0], [105.0, 3402.0], [111.0, 2372.0], [110.0, 2881.0], [108.0, 2675.0], [115.0, 2854.5], [114.0, 3067.0], [112.0, 2762.0], [119.0, 2934.0], [118.0, 2862.0], [117.0, 2685.0], [116.0, 2690.0], [123.0, 3087.0], [122.0, 3179.0], [121.0, 2971.0], [127.0, 3107.0], [126.0, 2650.0], [125.0, 3111.0], [124.0, 3089.0], [135.0, 2171.0], [134.0, 3067.0], [133.0, 2606.0], [132.0, 3106.0], [131.0, 3073.0], [130.0, 3082.0], [129.0, 2625.0], [128.0, 3150.0], [143.0, 2497.0], [142.0, 2985.0], [141.0, 3010.0], [140.0, 3004.0], [139.0, 2550.0], [138.0, 2565.0], [137.0, 2996.0], [136.0, 2768.0], [151.0, 2520.0], [150.0, 2976.0], [149.0, 2576.0], [148.0, 3045.0], [147.0, 2605.0], [146.0, 2456.0], [145.0, 2622.0], [144.0, 2484.0], [159.0, 2887.0], [158.0, 2601.0], [157.0, 2526.0], [156.0, 2548.0], [155.0, 2561.0], [154.0, 2689.6666666666665], [167.0, 2813.0], [166.0, 2448.0], [165.0, 2851.0], [164.0, 2842.0], [163.0, 2450.0], [162.0, 2652.5], [160.0, 2926.0], [174.0, 2370.0], [173.0, 2325.0], [172.0, 2357.0], [171.0, 2361.0], [170.0, 2404.0], [169.0, 2611.0], [182.0, 2175.0], [181.0, 2629.0], [180.0, 2220.0], [179.0, 2642.0], [178.0, 2659.0], [177.0, 2737.0], [176.0, 2721.5], [191.0, 2127.0], [190.0, 2573.0], [189.0, 2215.5], [187.0, 2569.0], [186.0, 2588.0], [185.0, 2601.0], [184.0, 2607.5], [199.0, 1614.0], [198.0, 1396.5], [196.0, 1807.5], [194.0, 1348.0], [193.0, 2005.0], [192.0, 1776.0], [200.0, 1597.0], [1.0, 17411.0]], "isOverall": false, "label": "acessar bing", "isController": false}, {"data": [[100.8250000000001, 6938.535000000004]], "isOverall": false, "label": "acessar bing-Aggregated", "isController": false}, {"data": [[2.0, 1688.0], [3.0, 1666.0], [4.0, 1704.0], [5.0, 1871.0], [6.0, 1884.0], [7.0, 1828.0], [11.0, 1808.0], [12.0, 1692.0], [15.0, 1874.6666666666667], [16.0, 1984.0], [17.0, 1961.0], [18.0, 15148.0], [19.0, 15132.0], [22.0, 15163.666666666666], [23.0, 15140.0], [25.0, 2339.0], [27.0, 2354.0], [28.0, 2450.0], [29.0, 2128.0], [30.0, 2288.0], [33.0, 2228.5], [35.0, 2305.0], [34.0, 2349.0], [37.0, 7301.0], [36.0, 2268.0], [39.0, 2319.0], [38.0, 2210.0], [41.0, 2263.0], [40.0, 2283.0], [42.0, 2224.0], [44.0, 4759.0], [47.0, 2797.0], [46.0, 2265.5], [49.0, 2576.5], [51.0, 2782.0], [50.0, 2739.0], [55.0, 2276.0], [54.0, 2485.0], [57.0, 1701.0], [56.0, 2685.0], [58.0, 2600.0], [63.0, 2183.2], [67.0, 1755.0], [66.0, 1752.0], [65.0, 1765.0], [64.0, 2444.0], [71.0, 1830.3333333333333], [68.0, 1890.0], [75.0, 1800.0], [74.0, 1924.0], [72.0, 1758.0], [79.0, 1891.5], [77.0, 1751.0], [76.0, 1799.0], [83.0, 1567.0], [82.0, 1448.0], [81.0, 1436.0], [80.0, 1727.0], [87.0, 1434.0], [86.0, 1408.0], [85.0, 1115.0], [84.0, 1117.0], [91.0, 1504.0], [90.0, 624.0], [89.0, 1109.0], [95.0, 1131.0], [94.0, 1125.0], [93.0, 563.0], [92.0, 569.0], [98.0, 959.0], [96.0, 524.0], [102.0, 770.0], [101.0, 1119.5], [100.0, 1246.0], [107.0, 591.0], [105.0, 1191.5], [111.0, 358.0], [110.0, 809.5], [108.0, 536.0], [115.0, 706.5], [114.0, 1128.0], [112.0, 666.0], [119.0, 837.0], [118.0, 736.0], [117.0, 690.0], [116.0, 690.0], [123.0, 1132.0], [122.0, 1218.0], [121.0, 877.0], [127.0, 1174.0], [126.0, 793.0], [125.0, 1168.0], [124.0, 1226.0], [135.0, 364.0], [134.0, 1179.0], [133.0, 720.0], [132.0, 1196.0], [131.0, 1162.0], [130.0, 1168.0], [129.0, 730.0], [128.0, 1218.0], [143.0, 675.0], [142.0, 1193.0], [141.0, 1179.0], [140.0, 1171.0], [139.0, 714.0], [138.0, 705.0], [137.0, 1132.0], [136.0, 747.0], [151.0, 675.0], [150.0, 1085.0], [149.0, 724.0], [148.0, 1295.0], [147.0, 851.0], [146.0, 721.0], [145.0, 837.0], [144.0, 604.0], [159.0, 1072.0], [158.0, 787.0], [157.0, 712.0], [156.0, 799.0], [155.0, 743.0], [154.0, 892.0], [167.0, 1065.0], [166.0, 789.0], [165.0, 1088.0], [164.0, 1076.0], [163.0, 761.0], [162.0, 884.0], [160.0, 1233.0], [174.0, 794.0], [173.0, 640.0], [172.0, 735.0], [171.0, 679.0], [170.0, 736.0], [169.0, 944.0], [182.0, 730.0], [181.0, 1083.0], [180.0, 759.0], [179.0, 1079.0], [178.0, 1088.0], [177.0, 1112.0], [176.0, 1097.5], [191.0, 679.0], [190.0, 1091.0], [189.0, 810.5], [187.0, 1073.0], [186.0, 1089.0], [185.0, 1074.0], [184.0, 1056.5], [199.0, 1075.0], [198.0, 838.5], [196.0, 1101.5], [194.0, 531.0], [193.0, 1078.0], [192.0, 747.0], [200.0, 1090.0], [1.0, 1730.0]], "isOverall": false, "label": "acessar bing-0", "isController": false}, {"data": [[100.8250000000001, 1847.4199999999992]], "isOverall": false, "label": "acessar bing-0-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 200.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 2026.6666666666667, "minX": 1.58622948E12, "maxY": 631201.2, "series": [{"data": [[1.58622948E12, 631201.2]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.58622948E12, 2026.6666666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58622948E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 865.585, "minX": 1.58622948E12, "maxY": 6938.535000000004, "series": [{"data": [[1.58622948E12, 865.585]], "isOverall": false, "label": "acessar google", "isController": false}, {"data": [[1.58622948E12, 5090.275000000001]], "isOverall": false, "label": "acessar bing-1", "isController": false}, {"data": [[1.58622948E12, 6938.535000000004]], "isOverall": false, "label": "acessar bing", "isController": false}, {"data": [[1.58622948E12, 1847.4199999999992]], "isOverall": false, "label": "acessar bing-0", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58622948E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 840.3449999999997, "minX": 1.58622948E12, "maxY": 4546.36, "series": [{"data": [[1.58622948E12, 840.3449999999997]], "isOverall": false, "label": "acessar google", "isController": false}, {"data": [[1.58622948E12, 4546.36]], "isOverall": false, "label": "acessar bing-1", "isController": false}, {"data": [[1.58622948E12, 1847.4199999999987]], "isOverall": false, "label": "acessar bing", "isController": false}, {"data": [[1.58622948E12, 1847.4199999999992]], "isOverall": false, "label": "acessar bing-0", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58622948E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 627.6949999999999, "minX": 1.58622948E12, "maxY": 4210.025, "series": [{"data": [[1.58622948E12, 627.6949999999999]], "isOverall": false, "label": "acessar google", "isController": false}, {"data": [[1.58622948E12, 4210.025]], "isOverall": false, "label": "acessar bing-1", "isController": false}, {"data": [[1.58622948E12, 1635.1899999999998]], "isOverall": false, "label": "acessar bing", "isController": false}, {"data": [[1.58622948E12, 1635.1899999999994]], "isOverall": false, "label": "acessar bing-0", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58622948E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 252.0, "minX": 1.58622948E12, "maxY": 17653.0, "series": [{"data": [[1.58622948E12, 17653.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.58622948E12, 252.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.58622948E12, 9659.799999999997]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.58622948E12, 17420.9]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.58622948E12, 15400.699999999983]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58622948E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 751.0, "minX": 18.0, "maxY": 16461.0, "series": [{"data": [[66.0, 8148.0], [34.0, 16461.0], [74.0, 751.0], [18.0, 15154.0], [163.0, 2268.0], [185.0, 860.0], [112.0, 1207.0], [56.0, 2381.0], [30.0, 7483.5], [62.0, 8446.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 185.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 744.5, "minX": 18.0, "maxY": 15140.0, "series": [{"data": [[66.0, 4999.0], [34.0, 8636.5], [74.0, 744.5], [18.0, 15140.0], [163.0, 844.0], [185.0, 837.0], [112.0, 1165.0], [56.0, 1130.0], [30.0, 7275.0], [62.0, 5051.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 185.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 13.333333333333334, "minX": 1.58622948E12, "maxY": 13.333333333333334, "series": [{"data": [[1.58622948E12, 13.333333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58622948E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 3.3333333333333335, "minX": 1.58622948E12, "maxY": 10.0, "series": [{"data": [[1.58622948E12, 10.0]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.58622948E12, 3.3333333333333335]], "isOverall": false, "label": "301", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58622948E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 3.3333333333333335, "minX": 1.58622948E12, "maxY": 3.3333333333333335, "series": [{"data": [[1.58622948E12, 3.3333333333333335]], "isOverall": false, "label": "acessar google-success", "isController": false}, {"data": [[1.58622948E12, 3.3333333333333335]], "isOverall": false, "label": "acessar bing-success", "isController": false}, {"data": [[1.58622948E12, 3.3333333333333335]], "isOverall": false, "label": "acessar bing-0-success", "isController": false}, {"data": [[1.58622948E12, 3.3333333333333335]], "isOverall": false, "label": "acessar bing-1-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58622948E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 13.333333333333334, "minX": 1.58622948E12, "maxY": 13.333333333333334, "series": [{"data": [[1.58622948E12, 13.333333333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58622948E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

